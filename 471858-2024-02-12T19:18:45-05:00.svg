<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="426" onload="init(evt)" viewBox="0 0 1200 426" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = true;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
            if (!isEdge) {
                svg.removeAttribute("viewBox");
            }
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="426" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">py-spy record --pid 471858</text><text id="details" x="10" y="40.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1190" y="24.00">Search</text><text id="matched" x="1190" y="415.00"> </text><svg id="frames" x="10" width="1180" total_samples="646"><g><title>_worker (src/sanic_vec_env.py:64) (138 samples, 21.36%)</title><rect x="0.0000%" y="148" width="21.3622%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="138"/><text x="0.2500%" y="158.50">_worker (src/sanic_vec_env.py:64)</text></g><g><title>recv (multiprocessing/connection.py:250) (138 samples, 21.36%)</title><rect x="0.0000%" y="164" width="21.3622%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="138"/><text x="0.2500%" y="174.50">recv (multiprocessing/connection.p..</text></g><g><title>_recv_bytes (multiprocessing/connection.py:430) (138 samples, 21.36%)</title><rect x="0.0000%" y="180" width="21.3622%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="138"/><text x="0.2500%" y="190.50">_recv_bytes (multiprocessing/conne..</text></g><g><title>_recv (multiprocessing/connection.py:395) (138 samples, 21.36%)</title><rect x="0.0000%" y="196" width="21.3622%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="138"/><text x="0.2500%" y="206.50">_recv (multiprocessing/connection...</text></g><g><title>step (src/trader.py:460) (1 samples, 0.15%)</title><rect x="21.5170%" y="164" width="0.1548%" height="15" fill="rgb(208,68,35)" fg:x="139" fg:w="1"/><text x="21.7670%" y="174.50"></text></g><g><title>_get_model_portfolio_weights (src/trader.py:269) (1 samples, 0.15%)</title><rect x="21.5170%" y="180" width="0.1548%" height="15" fill="rgb(232,128,0)" fg:x="139" fg:w="1"/><text x="21.7670%" y="190.50"></text></g><g><title>total_net_position_value (src/trader.py:226) (1 samples, 0.15%)</title><rect x="21.8266%" y="212" width="0.1548%" height="15" fill="rgb(207,160,47)" fg:x="141" fg:w="1"/><text x="22.0766%" y="222.50"></text></g><g><title>current_portfolio_value (src/trader.py:189) (2 samples, 0.31%)</title><rect x="21.8266%" y="196" width="0.3096%" height="15" fill="rgb(228,23,34)" fg:x="141" fg:w="2"/><text x="22.0766%" y="206.50"></text></g><g><title>total_net_position_value (src/trader.py:227) (1 samples, 0.15%)</title><rect x="21.9814%" y="212" width="0.1548%" height="15" fill="rgb(218,30,26)" fg:x="142" fg:w="1"/><text x="22.2314%" y="222.50"></text></g><g><title>step (src/trader.py:463) (4 samples, 0.62%)</title><rect x="21.6718%" y="164" width="0.6192%" height="15" fill="rgb(220,122,19)" fg:x="140" fg:w="4"/><text x="21.9218%" y="174.50"></text></g><g><title>net_position_weights (src/trader.py:199) (4 samples, 0.62%)</title><rect x="21.6718%" y="180" width="0.6192%" height="15" fill="rgb(250,228,42)" fg:x="140" fg:w="4"/><text x="21.9218%" y="190.50"></text></g><g><title>net_position_values (src/trader.py:201) (1 samples, 0.15%)</title><rect x="22.1362%" y="196" width="0.1548%" height="15" fill="rgb(240,193,28)" fg:x="143" fg:w="1"/><text x="22.3862%" y="206.50"></text></g><g><title>step (src/trader.py:474) (1 samples, 0.15%)</title><rect x="22.2910%" y="164" width="0.1548%" height="15" fill="rgb(216,20,37)" fg:x="144" fg:w="1"/><text x="22.5410%" y="174.50"></text></g><g><title>current_portfolio_value (src/trader.py:181) (1 samples, 0.15%)</title><rect x="22.4458%" y="180" width="0.1548%" height="15" fill="rgb(206,188,39)" fg:x="145" fg:w="1"/><text x="22.6958%" y="190.50"></text></g><g><title>step (src/trader.py:475) (4 samples, 0.62%)</title><rect x="22.4458%" y="164" width="0.6192%" height="15" fill="rgb(217,207,13)" fg:x="145" fg:w="4"/><text x="22.6958%" y="174.50"></text></g><g><title>current_portfolio_value (src/trader.py:189) (3 samples, 0.46%)</title><rect x="22.6006%" y="180" width="0.4644%" height="15" fill="rgb(231,73,38)" fg:x="146" fg:w="3"/><text x="22.8506%" y="190.50"></text></g><g><title>total_net_position_value (src/trader.py:227) (3 samples, 0.46%)</title><rect x="22.6006%" y="196" width="0.4644%" height="15" fill="rgb(225,20,46)" fg:x="146" fg:w="3"/><text x="22.8506%" y="206.50"></text></g><g><title>dot (numpy/core/multiarray.py:741) (1 samples, 0.15%)</title><rect x="22.9102%" y="212" width="0.1548%" height="15" fill="rgb(210,31,41)" fg:x="148" fg:w="1"/><text x="23.1602%" y="222.50"></text></g><g><title>step (src/trader.py:476) (1 samples, 0.15%)</title><rect x="23.0650%" y="164" width="0.1548%" height="15" fill="rgb(221,200,47)" fg:x="149" fg:w="1"/><text x="23.3150%" y="174.50"></text></g><g><title>step (src/trader.py:477) (1 samples, 0.15%)</title><rect x="23.2198%" y="164" width="0.1548%" height="15" fill="rgb(226,26,5)" fg:x="150" fg:w="1"/><text x="23.4698%" y="174.50"></text></g><g><title>_trade (src/trader.py:347) (3 samples, 0.46%)</title><rect x="23.3746%" y="180" width="0.4644%" height="15" fill="rgb(249,33,26)" fg:x="151" fg:w="3"/><text x="23.6246%" y="190.50"></text></g><g><title>step (src/trader.py:478) (4 samples, 0.62%)</title><rect x="23.3746%" y="164" width="0.6192%" height="15" fill="rgb(235,183,28)" fg:x="151" fg:w="4"/><text x="23.6246%" y="174.50"></text></g><g><title>_trade (src/trader.py:363) (1 samples, 0.15%)</title><rect x="23.8390%" y="180" width="0.1548%" height="15" fill="rgb(221,5,38)" fg:x="154" fg:w="1"/><text x="24.0890%" y="190.50"></text></g><g><title>collect (polars/lazyframe/frame.py:1940) (16 samples, 2.48%)</title><rect x="23.9938%" y="196" width="2.4768%" height="15" fill="rgb(247,18,42)" fg:x="155" fg:w="16"/><text x="24.2438%" y="206.50">co..</text></g><g><title>filter (polars/lazyframe/frame.py:2808) (1 samples, 0.15%)</title><rect x="26.4706%" y="196" width="0.1548%" height="15" fill="rgb(241,131,45)" fg:x="171" fg:w="1"/><text x="26.7206%" y="206.50"></text></g><g><title>filter (polars/lazyframe/frame.py:2921) (1 samples, 0.15%)</title><rect x="26.6254%" y="196" width="0.1548%" height="15" fill="rgb(249,31,29)" fg:x="172" fg:w="1"/><text x="26.8754%" y="206.50"></text></g><g><title>is_bool_sequence (polars/utils/various.py:80) (1 samples, 0.15%)</title><rect x="26.6254%" y="212" width="0.1548%" height="15" fill="rgb(225,111,53)" fg:x="172" fg:w="1"/><text x="26.8754%" y="222.50"></text></g><g><title>__instancecheck__ (typing.py:1312) (1 samples, 0.15%)</title><rect x="26.6254%" y="228" width="0.1548%" height="15" fill="rgb(238,160,17)" fg:x="172" fg:w="1"/><text x="26.8754%" y="238.50"></text></g><g><title>__subclasscheck__ (typing.py:1586) (1 samples, 0.15%)</title><rect x="26.6254%" y="244" width="0.1548%" height="15" fill="rgb(214,148,48)" fg:x="172" fg:w="1"/><text x="26.8754%" y="254.50"></text></g><g><title>parse_as_list_of_expressions (polars/utils/_parse_expr_input.py:42) (1 samples, 0.15%)</title><rect x="26.7802%" y="212" width="0.1548%" height="15" fill="rgb(232,36,49)" fg:x="173" fg:w="1"/><text x="27.0302%" y="222.50"></text></g><g><title>_parse_positional_inputs (polars/utils/_parse_expr_input.py:55) (1 samples, 0.15%)</title><rect x="26.7802%" y="228" width="0.1548%" height="15" fill="rgb(209,103,24)" fg:x="173" fg:w="1"/><text x="27.0302%" y="238.50"></text></g><g><title>_parse_inputs_as_iterable (polars/utils/_parse_expr_input.py:66) (1 samples, 0.15%)</title><rect x="26.7802%" y="244" width="0.1548%" height="15" fill="rgb(229,88,8)" fg:x="173" fg:w="1"/><text x="27.0302%" y="254.50"></text></g><g><title>_is_iterable (polars/utils/_parse_expr_input.py:73) (1 samples, 0.15%)</title><rect x="26.7802%" y="260" width="0.1548%" height="15" fill="rgb(213,181,19)" fg:x="173" fg:w="1"/><text x="27.0302%" y="270.50"></text></g><g><title>__instancecheck__ (typing.py:1312) (1 samples, 0.15%)</title><rect x="26.7802%" y="276" width="0.1548%" height="15" fill="rgb(254,191,54)" fg:x="173" fg:w="1"/><text x="27.0302%" y="286.50"></text></g><g><title>__subclasscheck__ (typing.py:1590) (1 samples, 0.15%)</title><rect x="26.7802%" y="292" width="0.1548%" height="15" fill="rgb(241,83,37)" fg:x="173" fg:w="1"/><text x="27.0302%" y="302.50"></text></g><g><title>__subclasscheck__ (abc.py:123) (1 samples, 0.15%)</title><rect x="26.7802%" y="308" width="0.1548%" height="15" fill="rgb(233,36,39)" fg:x="173" fg:w="1"/><text x="27.0302%" y="318.50"></text></g><g><title>filter (polars/lazyframe/frame.py:2940) (2 samples, 0.31%)</title><rect x="26.7802%" y="196" width="0.3096%" height="15" fill="rgb(226,3,54)" fg:x="173" fg:w="2"/><text x="27.0302%" y="206.50"></text></g><g><title>parse_as_list_of_expressions (polars/utils/_parse_expr_input.py:43) (1 samples, 0.15%)</title><rect x="26.9350%" y="212" width="0.1548%" height="15" fill="rgb(245,192,40)" fg:x="174" fg:w="1"/><text x="27.1850%" y="222.50"></text></g><g><title>filter (polars/lazyframe/frame.py:2987) (1 samples, 0.15%)</title><rect x="27.0898%" y="196" width="0.1548%" height="15" fill="rgb(238,167,29)" fg:x="175" fg:w="1"/><text x="27.3398%" y="206.50"></text></g><g><title>select (polars/lazyframe/frame.py:3092) (1 samples, 0.15%)</title><rect x="27.2446%" y="196" width="0.1548%" height="15" fill="rgb(232,182,51)" fg:x="176" fg:w="1"/><text x="27.4946%" y="206.50"></text></g><g><title>select (polars/lazyframe/frame.py:3094) (1 samples, 0.15%)</title><rect x="27.3994%" y="196" width="0.1548%" height="15" fill="rgb(231,60,39)" fg:x="177" fg:w="1"/><text x="27.6494%" y="206.50"></text></g><g><title>parse_as_list_of_expressions (polars/utils/_parse_expr_input.py:42) (1 samples, 0.15%)</title><rect x="27.3994%" y="212" width="0.1548%" height="15" fill="rgb(208,69,12)" fg:x="177" fg:w="1"/><text x="27.6494%" y="222.50"></text></g><g><title>_parse_positional_inputs (polars/utils/_parse_expr_input.py:56) (1 samples, 0.15%)</title><rect x="27.3994%" y="228" width="0.1548%" height="15" fill="rgb(235,93,37)" fg:x="177" fg:w="1"/><text x="27.6494%" y="238.50"></text></g><g><title>&lt;listcomp&gt; (polars/utils/_parse_expr_input.py:56) (1 samples, 0.15%)</title><rect x="27.3994%" y="244" width="0.1548%" height="15" fill="rgb(213,116,39)" fg:x="177" fg:w="1"/><text x="27.6494%" y="254.50"></text></g><g><title>parse_as_expression (polars/utils/_parse_expr_input.py:119) (1 samples, 0.15%)</title><rect x="27.3994%" y="260" width="0.1548%" height="15" fill="rgb(222,207,29)" fg:x="177" fg:w="1"/><text x="27.6494%" y="270.50"></text></g><g><title>__new__ (polars/functions/col.py:288) (1 samples, 0.15%)</title><rect x="27.3994%" y="276" width="0.1548%" height="15" fill="rgb(206,96,30)" fg:x="177" fg:w="1"/><text x="27.6494%" y="286.50"></text></g><g><title>_create_col (polars/functions/col.py:20) (1 samples, 0.15%)</title><rect x="27.3994%" y="292" width="0.1548%" height="15" fill="rgb(218,138,4)" fg:x="177" fg:w="1"/><text x="27.6494%" y="302.50"></text></g><g><title>wrapper (polars/utils/deprecation.py:228) (1 samples, 0.15%)</title><rect x="27.5542%" y="196" width="0.1548%" height="15" fill="rgb(250,191,14)" fg:x="178" fg:w="1"/><text x="27.8042%" y="206.50"></text></g><g><title>to_numpy (polars/dataframe/frame.py:2077) (1 samples, 0.15%)</title><rect x="27.5542%" y="212" width="0.1548%" height="15" fill="rgb(239,60,40)" fg:x="178" fg:w="1"/><text x="27.8042%" y="222.50"></text></g><g><title>_get_state_frame (src/trader.py:326) (25 samples, 3.87%)</title><rect x="23.9938%" y="180" width="3.8700%" height="15" fill="rgb(206,27,48)" fg:x="155" fg:w="25"/><text x="24.2438%" y="190.50">_get..</text></g><g><title>wrapper (polars/utils/deprecation.py:98) (1 samples, 0.15%)</title><rect x="27.7090%" y="196" width="0.1548%" height="15" fill="rgb(225,35,8)" fg:x="179" fg:w="1"/><text x="27.9590%" y="206.50"></text></g><g><title>drop (polars/lazyframe/frame.py:4430) (1 samples, 0.15%)</title><rect x="27.7090%" y="212" width="0.1548%" height="15" fill="rgb(250,213,24)" fg:x="179" fg:w="1"/><text x="27.9590%" y="222.50"></text></g><g><title>collect (polars/lazyframe/frame.py:1940) (23 samples, 3.56%)</title><rect x="27.8638%" y="196" width="3.5604%" height="15" fill="rgb(247,123,22)" fg:x="180" fg:w="23"/><text x="28.1138%" y="206.50">coll..</text></g><g><title>parse_as_list_of_expressions (polars/utils/_parse_expr_input.py:20) (1 samples, 0.15%)</title><rect x="31.4241%" y="212" width="0.1548%" height="15" fill="rgb(231,138,38)" fg:x="203" fg:w="1"/><text x="31.6741%" y="222.50"></text></g><g><title>filter (polars/lazyframe/frame.py:2940) (2 samples, 0.31%)</title><rect x="31.4241%" y="196" width="0.3096%" height="15" fill="rgb(231,145,46)" fg:x="203" fg:w="2"/><text x="31.6741%" y="206.50"></text></g><g><title>parse_as_list_of_expressions (polars/utils/_parse_expr_input.py:42) (1 samples, 0.15%)</title><rect x="31.5789%" y="212" width="0.1548%" height="15" fill="rgb(251,118,11)" fg:x="204" fg:w="1"/><text x="31.8289%" y="222.50"></text></g><g><title>_parse_positional_inputs (polars/utils/_parse_expr_input.py:56) (1 samples, 0.15%)</title><rect x="31.5789%" y="228" width="0.1548%" height="15" fill="rgb(217,147,25)" fg:x="204" fg:w="1"/><text x="31.8289%" y="238.50"></text></g><g><title>&lt;listcomp&gt; (polars/utils/_parse_expr_input.py:56) (1 samples, 0.15%)</title><rect x="31.5789%" y="244" width="0.1548%" height="15" fill="rgb(247,81,37)" fg:x="204" fg:w="1"/><text x="31.8289%" y="254.50"></text></g><g><title>parse_as_expression (polars/utils/_parse_expr_input.py:85) (1 samples, 0.15%)</title><rect x="31.5789%" y="260" width="0.1548%" height="15" fill="rgb(209,12,38)" fg:x="204" fg:w="1"/><text x="31.8289%" y="270.50"></text></g><g><title>filter (polars/lazyframe/frame.py:2986) (1 samples, 0.15%)</title><rect x="31.7337%" y="196" width="0.1548%" height="15" fill="rgb(227,1,9)" fg:x="205" fg:w="1"/><text x="31.9837%" y="206.50"></text></g><g><title>_from_pyldf (polars/lazyframe/frame.py:317) (1 samples, 0.15%)</title><rect x="31.7337%" y="212" width="0.1548%" height="15" fill="rgb(248,47,43)" fg:x="205" fg:w="1"/><text x="31.9837%" y="222.50"></text></g><g><title>numpy_to_pyseries (polars/utils/_construction.py:253) (1 samples, 0.15%)</title><rect x="31.8885%" y="228" width="0.1548%" height="15" fill="rgb(221,10,30)" fg:x="206" fg:w="1"/><text x="32.1385%" y="238.50"></text></g><g><title>is_in (polars/expr/expr.py:5346) (2 samples, 0.31%)</title><rect x="31.8885%" y="196" width="0.3096%" height="15" fill="rgb(210,229,1)" fg:x="206" fg:w="2"/><text x="32.1385%" y="206.50"></text></g><g><title>__init__ (polars/series/series.py:311) (2 samples, 0.31%)</title><rect x="31.8885%" y="212" width="0.3096%" height="15" fill="rgb(222,148,37)" fg:x="206" fg:w="2"/><text x="32.1385%" y="222.50"></text></g><g><title>numpy_to_pyseries (polars/utils/_construction.py:266) (1 samples, 0.15%)</title><rect x="32.0433%" y="228" width="0.1548%" height="15" fill="rgb(234,67,33)" fg:x="207" fg:w="1"/><text x="32.2933%" y="238.50"></text></g><g><title>_get_state_frame (src/trader.py:328) (30 samples, 4.64%)</title><rect x="27.8638%" y="180" width="4.6440%" height="15" fill="rgb(247,98,35)" fg:x="180" fg:w="30"/><text x="28.1138%" y="190.50">_get_..</text></g><g><title>select (polars/lazyframe/frame.py:3094) (2 samples, 0.31%)</title><rect x="32.1981%" y="196" width="0.3096%" height="15" fill="rgb(247,138,52)" fg:x="208" fg:w="2"/><text x="32.4481%" y="206.50"></text></g><g><title>parse_as_list_of_expressions (polars/utils/_parse_expr_input.py:42) (2 samples, 0.31%)</title><rect x="32.1981%" y="212" width="0.3096%" height="15" fill="rgb(213,79,30)" fg:x="208" fg:w="2"/><text x="32.4481%" y="222.50"></text></g><g><title>_parse_positional_inputs (polars/utils/_parse_expr_input.py:56) (2 samples, 0.31%)</title><rect x="32.1981%" y="228" width="0.3096%" height="15" fill="rgb(246,177,23)" fg:x="208" fg:w="2"/><text x="32.4481%" y="238.50"></text></g><g><title>&lt;listcomp&gt; (polars/utils/_parse_expr_input.py:56) (2 samples, 0.31%)</title><rect x="32.1981%" y="244" width="0.3096%" height="15" fill="rgb(230,62,27)" fg:x="208" fg:w="2"/><text x="32.4481%" y="254.50"></text></g><g><title>parse_as_expression (polars/utils/_parse_expr_input.py:119) (2 samples, 0.31%)</title><rect x="32.1981%" y="260" width="0.3096%" height="15" fill="rgb(216,154,8)" fg:x="208" fg:w="2"/><text x="32.4481%" y="270.50"></text></g><g><title>__new__ (polars/functions/col.py:288) (2 samples, 0.31%)</title><rect x="32.1981%" y="276" width="0.3096%" height="15" fill="rgb(244,35,45)" fg:x="208" fg:w="2"/><text x="32.4481%" y="286.50"></text></g><g><title>_create_col (polars/functions/col.py:42) (2 samples, 0.31%)</title><rect x="32.1981%" y="292" width="0.3096%" height="15" fill="rgb(251,115,12)" fg:x="208" fg:w="2"/><text x="32.4481%" y="302.50"></text></g><g><title>wrap_expr (polars/utils/_wrap.py:25) (1 samples, 0.15%)</title><rect x="32.3529%" y="308" width="0.1548%" height="15" fill="rgb(240,54,50)" fg:x="209" fg:w="1"/><text x="32.6029%" y="318.50"></text></g><g><title>_get_state_frame (src/trader.py:331) (1 samples, 0.15%)</title><rect x="32.5077%" y="180" width="0.1548%" height="15" fill="rgb(233,84,52)" fg:x="210" fg:w="1"/><text x="32.7577%" y="190.50"></text></g><g><title>diff (numpy/lib/function_base.py:1452) (1 samples, 0.15%)</title><rect x="32.5077%" y="196" width="0.1548%" height="15" fill="rgb(207,117,47)" fg:x="210" fg:w="1"/><text x="32.7577%" y="206.50"></text></g><g><title>__eq__ (polars/expr/expr.py:178) (3 samples, 0.46%)</title><rect x="33.4365%" y="196" width="0.4644%" height="15" fill="rgb(249,43,39)" fg:x="216" fg:w="3"/><text x="33.6865%" y="206.50"></text></g><g><title>parse_as_expression (polars/utils/_parse_expr_input.py:125) (3 samples, 0.46%)</title><rect x="33.4365%" y="212" width="0.4644%" height="15" fill="rgb(209,38,44)" fg:x="216" fg:w="3"/><text x="33.6865%" y="222.50"></text></g><g><title>lit (polars/functions/lit.py:148) (2 samples, 0.31%)</title><rect x="33.5913%" y="228" width="0.3096%" height="15" fill="rgb(236,212,23)" fg:x="217" fg:w="2"/><text x="33.8413%" y="238.50"></text></g><g><title>wrap_expr (polars/utils/_wrap.py:25) (1 samples, 0.15%)</title><rect x="33.7461%" y="244" width="0.1548%" height="15" fill="rgb(242,79,21)" fg:x="218" fg:w="1"/><text x="33.9961%" y="254.50"></text></g><g><title>collect (polars/lazyframe/frame.py:1940) (51 samples, 7.89%)</title><rect x="33.9009%" y="196" width="7.8947%" height="15" fill="rgb(211,96,35)" fg:x="219" fg:w="51"/><text x="34.1509%" y="206.50">collect (po..</text></g><g><title>filter (polars/lazyframe/frame.py:2921) (1 samples, 0.15%)</title><rect x="41.7957%" y="196" width="0.1548%" height="15" fill="rgb(253,215,40)" fg:x="270" fg:w="1"/><text x="42.0457%" y="206.50"></text></g><g><title>is_bool_sequence (polars/utils/various.py:80) (1 samples, 0.15%)</title><rect x="41.7957%" y="212" width="0.1548%" height="15" fill="rgb(211,81,21)" fg:x="270" fg:w="1"/><text x="42.0457%" y="222.50"></text></g><g><title>__instancecheck__ (typing.py:1312) (1 samples, 0.15%)</title><rect x="41.7957%" y="228" width="0.1548%" height="15" fill="rgb(208,190,38)" fg:x="270" fg:w="1"/><text x="42.0457%" y="238.50"></text></g><g><title>__subclasscheck__ (typing.py:1590) (1 samples, 0.15%)</title><rect x="41.7957%" y="244" width="0.1548%" height="15" fill="rgb(235,213,38)" fg:x="270" fg:w="1"/><text x="42.0457%" y="254.50"></text></g><g><title>filter (polars/lazyframe/frame.py:2939) (1 samples, 0.15%)</title><rect x="41.9505%" y="196" width="0.1548%" height="15" fill="rgb(237,122,38)" fg:x="271" fg:w="1"/><text x="42.2005%" y="206.50"></text></g><g><title>&lt;genexpr&gt; (polars/lazyframe/frame.py:2939) (1 samples, 0.15%)</title><rect x="41.9505%" y="212" width="0.1548%" height="15" fill="rgb(244,218,35)" fg:x="271" fg:w="1"/><text x="42.2005%" y="222.50"></text></g><g><title>select (polars/lazyframe/frame.py:3092) (1 samples, 0.15%)</title><rect x="42.1053%" y="196" width="0.1548%" height="15" fill="rgb(240,68,47)" fg:x="272" fg:w="1"/><text x="42.3553%" y="206.50"></text></g><g><title>get (_collections_abc.py:774) (1 samples, 0.15%)</title><rect x="42.1053%" y="212" width="0.1548%" height="15" fill="rgb(210,16,53)" fg:x="272" fg:w="1"/><text x="42.3553%" y="222.50"></text></g><g><title>__getitem__ (os.py:674) (1 samples, 0.15%)</title><rect x="42.1053%" y="228" width="0.1548%" height="15" fill="rgb(235,124,12)" fg:x="272" fg:w="1"/><text x="42.3553%" y="238.50"></text></g><g><title>_parse_positional_inputs (polars/utils/_parse_expr_input.py:50) (1 samples, 0.15%)</title><rect x="42.2601%" y="228" width="0.1548%" height="15" fill="rgb(224,169,11)" fg:x="273" fg:w="1"/><text x="42.5101%" y="238.50"></text></g><g><title>__new__ (polars/functions/col.py:147) (2 samples, 0.31%)</title><rect x="42.7245%" y="276" width="0.3096%" height="15" fill="rgb(250,166,2)" fg:x="276" fg:w="2"/><text x="42.9745%" y="286.50"></text></g><g><title>_create_col (polars/functions/col.py:20) (2 samples, 0.31%)</title><rect x="43.0341%" y="292" width="0.3096%" height="15" fill="rgb(242,216,29)" fg:x="278" fg:w="2"/><text x="43.2841%" y="302.50"></text></g><g><title>_create_col (polars/functions/col.py:41) (1 samples, 0.15%)</title><rect x="43.3437%" y="292" width="0.1548%" height="15" fill="rgb(230,116,27)" fg:x="280" fg:w="1"/><text x="43.5937%" y="302.50"></text></g><g><title>wrap_expr (polars/utils/_wrap.py:24) (5 samples, 0.77%)</title><rect x="43.8080%" y="308" width="0.7740%" height="15" fill="rgb(228,99,48)" fg:x="283" fg:w="5"/><text x="44.0580%" y="318.50"></text></g><g><title>_from_pyexpr (polars/expr/expr.py:126) (2 samples, 0.31%)</title><rect x="44.8916%" y="324" width="0.3096%" height="15" fill="rgb(253,11,6)" fg:x="290" fg:w="2"/><text x="45.1416%" y="334.50"></text></g><g><title>_from_pyexpr (polars/expr/expr.py:128) (2 samples, 0.31%)</title><rect x="45.2012%" y="324" width="0.3096%" height="15" fill="rgb(247,143,39)" fg:x="292" fg:w="2"/><text x="45.4512%" y="334.50"></text></g><g><title>parse_as_expression (polars/utils/_parse_expr_input.py:119) (20 samples, 3.10%)</title><rect x="42.5697%" y="260" width="3.0960%" height="15" fill="rgb(236,97,10)" fg:x="275" fg:w="20"/><text x="42.8197%" y="270.50">par..</text></g><g><title>__new__ (polars/functions/col.py:288) (17 samples, 2.63%)</title><rect x="43.0341%" y="276" width="2.6316%" height="15" fill="rgb(233,208,19)" fg:x="278" fg:w="17"/><text x="43.2841%" y="286.50">__..</text></g><g><title>_create_col (polars/functions/col.py:42) (14 samples, 2.17%)</title><rect x="43.4985%" y="292" width="2.1672%" height="15" fill="rgb(216,164,2)" fg:x="281" fg:w="14"/><text x="43.7485%" y="302.50">_..</text></g><g><title>wrap_expr (polars/utils/_wrap.py:25) (7 samples, 1.08%)</title><rect x="44.5820%" y="308" width="1.0836%" height="15" fill="rgb(220,129,5)" fg:x="288" fg:w="7"/><text x="44.8320%" y="318.50"></text></g><g><title>_from_pyexpr (polars/expr/expr.py:129) (1 samples, 0.15%)</title><rect x="45.5108%" y="324" width="0.1548%" height="15" fill="rgb(242,17,10)" fg:x="294" fg:w="1"/><text x="45.7608%" y="334.50"></text></g><g><title>select (polars/lazyframe/frame.py:3094) (23 samples, 3.56%)</title><rect x="42.2601%" y="196" width="3.5604%" height="15" fill="rgb(242,107,0)" fg:x="273" fg:w="23"/><text x="42.5101%" y="206.50">sele..</text></g><g><title>parse_as_list_of_expressions (polars/utils/_parse_expr_input.py:42) (23 samples, 3.56%)</title><rect x="42.2601%" y="212" width="3.5604%" height="15" fill="rgb(251,28,31)" fg:x="273" fg:w="23"/><text x="42.5101%" y="222.50">pars..</text></g><g><title>_parse_positional_inputs (polars/utils/_parse_expr_input.py:56) (22 samples, 3.41%)</title><rect x="42.4149%" y="228" width="3.4056%" height="15" fill="rgb(233,223,10)" fg:x="274" fg:w="22"/><text x="42.6649%" y="238.50">_pa..</text></g><g><title>&lt;listcomp&gt; (polars/utils/_parse_expr_input.py:56) (22 samples, 3.41%)</title><rect x="42.4149%" y="244" width="3.4056%" height="15" fill="rgb(215,21,27)" fg:x="274" fg:w="22"/><text x="42.6649%" y="254.50">&lt;li..</text></g><g><title>parse_as_expression (polars/utils/_parse_expr_input.py:85) (1 samples, 0.15%)</title><rect x="45.6656%" y="260" width="0.1548%" height="15" fill="rgb(232,23,21)" fg:x="295" fg:w="1"/><text x="45.9156%" y="270.50"></text></g><g><title>select (polars/lazyframe/frame.py:3097) (4 samples, 0.62%)</title><rect x="45.8204%" y="196" width="0.6192%" height="15" fill="rgb(244,5,23)" fg:x="296" fg:w="4"/><text x="46.0704%" y="206.50"></text></g><g><title>to_numpy (polars/dataframe/frame.py:2165) (1 samples, 0.15%)</title><rect x="46.5944%" y="212" width="0.1548%" height="15" fill="rgb(226,81,46)" fg:x="301" fg:w="1"/><text x="46.8444%" y="222.50"></text></g><g><title>wrapper (polars/utils/deprecation.py:228) (56 samples, 8.67%)</title><rect x="46.4396%" y="196" width="8.6687%" height="15" fill="rgb(247,70,30)" fg:x="300" fg:w="56"/><text x="46.6896%" y="206.50">wrapper (pol..</text></g><g><title>to_numpy (polars/dataframe/frame.py:2169) (54 samples, 8.36%)</title><rect x="46.7492%" y="212" width="8.3591%" height="15" fill="rgb(212,68,19)" fg:x="302" fg:w="54"/><text x="46.9992%" y="222.50">to_numpy (po..</text></g><g><title>_get_state_frame (src/trader.py:335) (146 samples, 22.60%)</title><rect x="32.6625%" y="180" width="22.6006%" height="15" fill="rgb(240,187,13)" fg:x="211" fg:w="146"/><text x="32.9125%" y="190.50">_get_state_frame (src/trader.py:335)</text></g><g><title>wrapper (polars/utils/deprecation.py:98) (1 samples, 0.15%)</title><rect x="55.1084%" y="196" width="0.1548%" height="15" fill="rgb(223,113,26)" fg:x="356" fg:w="1"/><text x="55.3584%" y="206.50"></text></g><g><title>drop (polars/lazyframe/frame.py:4430) (1 samples, 0.15%)</title><rect x="55.1084%" y="212" width="0.1548%" height="15" fill="rgb(206,192,2)" fg:x="356" fg:w="1"/><text x="55.3584%" y="222.50"></text></g><g><title>__eq__ (polars/expr/expr.py:176) (1 samples, 0.15%)</title><rect x="55.2632%" y="196" width="0.1548%" height="15" fill="rgb(241,108,4)" fg:x="357" fg:w="1"/><text x="55.5132%" y="206.50"></text></g><g><title>collect (polars/lazyframe/frame.py:1940) (9 samples, 1.39%)</title><rect x="55.4180%" y="196" width="1.3932%" height="15" fill="rgb(247,173,49)" fg:x="358" fg:w="9"/><text x="55.6680%" y="206.50"></text></g><g><title>filter (polars/lazyframe/frame.py:2987) (1 samples, 0.15%)</title><rect x="56.8111%" y="196" width="0.1548%" height="15" fill="rgb(224,114,35)" fg:x="367" fg:w="1"/><text x="57.0611%" y="206.50"></text></g><g><title>select (polars/lazyframe/frame.py:3092) (1 samples, 0.15%)</title><rect x="56.9659%" y="196" width="0.1548%" height="15" fill="rgb(245,159,27)" fg:x="368" fg:w="1"/><text x="57.2159%" y="206.50"></text></g><g><title>get (_collections_abc.py:774) (1 samples, 0.15%)</title><rect x="56.9659%" y="212" width="0.1548%" height="15" fill="rgb(245,172,44)" fg:x="368" fg:w="1"/><text x="57.2159%" y="222.50"></text></g><g><title>__getitem__ (os.py:676) (1 samples, 0.15%)</title><rect x="56.9659%" y="228" width="0.1548%" height="15" fill="rgb(236,23,11)" fg:x="368" fg:w="1"/><text x="57.2159%" y="238.50"></text></g><g><title>encode (os.py:759) (1 samples, 0.15%)</title><rect x="56.9659%" y="244" width="0.1548%" height="15" fill="rgb(205,117,38)" fg:x="368" fg:w="1"/><text x="57.2159%" y="254.50"></text></g><g><title>_parse_positional_inputs (polars/utils/_parse_expr_input.py:55) (1 samples, 0.15%)</title><rect x="57.2755%" y="228" width="0.1548%" height="15" fill="rgb(237,72,25)" fg:x="370" fg:w="1"/><text x="57.5255%" y="238.50"></text></g><g><title>_parse_inputs_as_iterable (polars/utils/_parse_expr_input.py:66) (1 samples, 0.15%)</title><rect x="57.2755%" y="244" width="0.1548%" height="15" fill="rgb(244,70,9)" fg:x="370" fg:w="1"/><text x="57.5255%" y="254.50"></text></g><g><title>_is_iterable (polars/utils/_parse_expr_input.py:73) (1 samples, 0.15%)</title><rect x="57.2755%" y="260" width="0.1548%" height="15" fill="rgb(217,125,39)" fg:x="370" fg:w="1"/><text x="57.5255%" y="270.50"></text></g><g><title>__instancecheck__ (typing.py:1312) (1 samples, 0.15%)</title><rect x="57.2755%" y="276" width="0.1548%" height="15" fill="rgb(235,36,10)" fg:x="370" fg:w="1"/><text x="57.5255%" y="286.50"></text></g><g><title>__subclasscheck__ (typing.py:1590) (1 samples, 0.15%)</title><rect x="57.2755%" y="292" width="0.1548%" height="15" fill="rgb(251,123,47)" fg:x="370" fg:w="1"/><text x="57.5255%" y="302.50"></text></g><g><title>__subclasscheck__ (abc.py:121) (1 samples, 0.15%)</title><rect x="57.2755%" y="308" width="0.1548%" height="15" fill="rgb(221,13,13)" fg:x="370" fg:w="1"/><text x="57.5255%" y="318.50"></text></g><g><title>__new__ (polars/functions/col.py:147) (1 samples, 0.15%)</title><rect x="57.4303%" y="276" width="0.1548%" height="15" fill="rgb(238,131,9)" fg:x="371" fg:w="1"/><text x="57.6803%" y="286.50"></text></g><g><title>select (polars/lazyframe/frame.py:3094) (5 samples, 0.77%)</title><rect x="57.1207%" y="196" width="0.7740%" height="15" fill="rgb(211,50,8)" fg:x="369" fg:w="5"/><text x="57.3707%" y="206.50"></text></g><g><title>parse_as_list_of_expressions (polars/utils/_parse_expr_input.py:42) (4 samples, 0.62%)</title><rect x="57.2755%" y="212" width="0.6192%" height="15" fill="rgb(245,182,24)" fg:x="370" fg:w="4"/><text x="57.5255%" y="222.50"></text></g><g><title>_parse_positional_inputs (polars/utils/_parse_expr_input.py:56) (3 samples, 0.46%)</title><rect x="57.4303%" y="228" width="0.4644%" height="15" fill="rgb(242,14,37)" fg:x="371" fg:w="3"/><text x="57.6803%" y="238.50"></text></g><g><title>&lt;listcomp&gt; (polars/utils/_parse_expr_input.py:56) (3 samples, 0.46%)</title><rect x="57.4303%" y="244" width="0.4644%" height="15" fill="rgb(246,228,12)" fg:x="371" fg:w="3"/><text x="57.6803%" y="254.50"></text></g><g><title>parse_as_expression (polars/utils/_parse_expr_input.py:119) (3 samples, 0.46%)</title><rect x="57.4303%" y="260" width="0.4644%" height="15" fill="rgb(213,55,15)" fg:x="371" fg:w="3"/><text x="57.6803%" y="270.50"></text></g><g><title>__new__ (polars/functions/col.py:288) (2 samples, 0.31%)</title><rect x="57.5851%" y="276" width="0.3096%" height="15" fill="rgb(209,9,3)" fg:x="372" fg:w="2"/><text x="57.8351%" y="286.50"></text></g><g><title>_create_col (polars/functions/col.py:42) (2 samples, 0.31%)</title><rect x="57.5851%" y="292" width="0.3096%" height="15" fill="rgb(230,59,30)" fg:x="372" fg:w="2"/><text x="57.8351%" y="302.50"></text></g><g><title>select (polars/lazyframe/frame.py:3097) (2 samples, 0.31%)</title><rect x="57.8947%" y="196" width="0.3096%" height="15" fill="rgb(209,121,21)" fg:x="374" fg:w="2"/><text x="58.1447%" y="206.50"></text></g><g><title>wrapper (polars/utils/deprecation.py:228) (11 samples, 1.70%)</title><rect x="58.2043%" y="196" width="1.7028%" height="15" fill="rgb(220,109,13)" fg:x="376" fg:w="11"/><text x="58.4543%" y="206.50"></text></g><g><title>to_numpy (polars/dataframe/frame.py:2169) (10 samples, 1.55%)</title><rect x="58.3591%" y="212" width="1.5480%" height="15" fill="rgb(232,18,1)" fg:x="377" fg:w="10"/><text x="58.6091%" y="222.50"></text></g><g><title>wrapper (polars/utils/deprecation.py:93) (1 samples, 0.15%)</title><rect x="59.9071%" y="196" width="0.1548%" height="15" fill="rgb(215,41,42)" fg:x="387" fg:w="1"/><text x="60.1571%" y="206.50"></text></g><g><title>_get_state_frame (src/trader.py:336) (32 samples, 4.95%)</title><rect x="55.2632%" y="180" width="4.9536%" height="15" fill="rgb(224,123,36)" fg:x="357" fg:w="32"/><text x="55.5132%" y="190.50">_get_s..</text></g><g><title>wrapper (polars/utils/deprecation.py:98) (1 samples, 0.15%)</title><rect x="60.0619%" y="196" width="0.1548%" height="15" fill="rgb(240,125,3)" fg:x="388" fg:w="1"/><text x="60.3119%" y="206.50"></text></g><g><title>drop (polars/lazyframe/frame.py:4429) (1 samples, 0.15%)</title><rect x="60.0619%" y="212" width="0.1548%" height="15" fill="rgb(205,98,50)" fg:x="388" fg:w="1"/><text x="60.3119%" y="222.50"></text></g><g><title>_expand_selectors (polars/selectors.py:151) (1 samples, 0.15%)</title><rect x="60.0619%" y="228" width="0.1548%" height="15" fill="rgb(205,185,37)" fg:x="388" fg:w="1"/><text x="60.3119%" y="238.50"></text></g><g><title>_parse_inputs_as_iterable (polars/utils/_parse_expr_input.py:66) (1 samples, 0.15%)</title><rect x="60.0619%" y="244" width="0.1548%" height="15" fill="rgb(238,207,15)" fg:x="388" fg:w="1"/><text x="60.3119%" y="254.50"></text></g><g><title>_is_iterable (polars/utils/_parse_expr_input.py:73) (1 samples, 0.15%)</title><rect x="60.0619%" y="260" width="0.1548%" height="15" fill="rgb(213,199,42)" fg:x="388" fg:w="1"/><text x="60.3119%" y="270.50"></text></g><g><title>_get_state_frame (src/trader.py:337) (2 samples, 0.31%)</title><rect x="60.2167%" y="180" width="0.3096%" height="15" fill="rgb(235,201,11)" fg:x="389" fg:w="2"/><text x="60.4667%" y="190.50"></text></g><g><title>step (src/trader.py:479) (237 samples, 36.69%)</title><rect x="23.9938%" y="164" width="36.6873%" height="15" fill="rgb(207,46,11)" fg:x="155" fg:w="237"/><text x="24.2438%" y="174.50">step (src/trader.py:479)</text></g><g><title>_get_state_frame (src/trader.py:341) (1 samples, 0.15%)</title><rect x="60.5263%" y="180" width="0.1548%" height="15" fill="rgb(241,35,35)" fg:x="391" fg:w="1"/><text x="60.7763%" y="190.50"></text></g><g><title>net_position_weights (src/trader.py:199) (1 samples, 0.15%)</title><rect x="60.5263%" y="196" width="0.1548%" height="15" fill="rgb(243,32,47)" fg:x="391" fg:w="1"/><text x="60.7763%" y="206.50"></text></g><g><title>current_portfolio_value (src/trader.py:189) (1 samples, 0.15%)</title><rect x="60.5263%" y="212" width="0.1548%" height="15" fill="rgb(247,202,23)" fg:x="391" fg:w="1"/><text x="60.7763%" y="222.50"></text></g><g><title>total_net_position_value (src/trader.py:227) (1 samples, 0.15%)</title><rect x="60.5263%" y="228" width="0.1548%" height="15" fill="rgb(219,102,11)" fg:x="391" fg:w="1"/><text x="60.7763%" y="238.50"></text></g><g><title>_var (numpy/core/_methods.py:135) (1 samples, 0.15%)</title><rect x="60.6811%" y="244" width="0.1548%" height="15" fill="rgb(243,110,44)" fg:x="392" fg:w="1"/><text x="60.9311%" y="254.50"></text></g><g><title>_var (numpy/core/_methods.py:152) (1 samples, 0.15%)</title><rect x="60.8359%" y="244" width="0.1548%" height="15" fill="rgb(222,74,54)" fg:x="393" fg:w="1"/><text x="61.0859%" y="254.50"></text></g><g><title>_get_reward (src/trader.py:399) (3 samples, 0.46%)</title><rect x="60.6811%" y="180" width="0.4644%" height="15" fill="rgb(216,99,12)" fg:x="392" fg:w="3"/><text x="60.9311%" y="190.50"></text></g><g><title>return_volatility (src/trader.py:386) (3 samples, 0.46%)</title><rect x="60.6811%" y="196" width="0.4644%" height="15" fill="rgb(226,22,26)" fg:x="392" fg:w="3"/><text x="60.9311%" y="206.50"></text></g><g><title>std (numpy/core/fromnumeric.py:3645) (3 samples, 0.46%)</title><rect x="60.6811%" y="212" width="0.4644%" height="15" fill="rgb(217,163,10)" fg:x="392" fg:w="3"/><text x="60.9311%" y="222.50"></text></g><g><title>_std (numpy/core/_methods.py:206) (3 samples, 0.46%)</title><rect x="60.6811%" y="228" width="0.4644%" height="15" fill="rgb(213,25,53)" fg:x="392" fg:w="3"/><text x="60.9311%" y="238.50"></text></g><g><title>_var (numpy/core/_methods.py:163) (1 samples, 0.15%)</title><rect x="60.9907%" y="244" width="0.1548%" height="15" fill="rgb(252,105,26)" fg:x="394" fg:w="1"/><text x="61.2407%" y="254.50"></text></g><g><title>yeojohnson (scipy/stats/_morestats.py:1529) (1 samples, 0.15%)</title><rect x="61.1455%" y="196" width="0.1548%" height="15" fill="rgb(220,39,43)" fg:x="395" fg:w="1"/><text x="61.3955%" y="206.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:357) (1 samples, 0.15%)</title><rect x="61.1455%" y="212" width="0.1548%" height="15" fill="rgb(229,68,48)" fg:x="395" fg:w="1"/><text x="61.3955%" y="222.50"></text></g><g><title>_yeojohnson_transform (scipy/stats/_morestats.py:1551) (1 samples, 0.15%)</title><rect x="61.3003%" y="212" width="0.1548%" height="15" fill="rgb(252,8,32)" fg:x="396" fg:w="1"/><text x="61.5503%" y="222.50"></text></g><g><title>_yeojohnson_transform (scipy/stats/_morestats.py:1555) (1 samples, 0.15%)</title><rect x="61.4551%" y="212" width="0.1548%" height="15" fill="rgb(223,20,43)" fg:x="397" fg:w="1"/><text x="61.7051%" y="222.50"></text></g><g><title>step (src/trader.py:481) (7 samples, 1.08%)</title><rect x="60.6811%" y="164" width="1.0836%" height="15" fill="rgb(229,81,49)" fg:x="392" fg:w="7"/><text x="60.9311%" y="174.50"></text></g><g><title>_get_reward (src/trader.py:400) (4 samples, 0.62%)</title><rect x="61.1455%" y="180" width="0.6192%" height="15" fill="rgb(236,28,36)" fg:x="395" fg:w="4"/><text x="61.3955%" y="190.50"></text></g><g><title>yeojohnson (scipy/stats/_morestats.py:1533) (3 samples, 0.46%)</title><rect x="61.3003%" y="196" width="0.4644%" height="15" fill="rgb(249,185,26)" fg:x="396" fg:w="3"/><text x="61.5503%" y="206.50"></text></g><g><title>_yeojohnson_transform (scipy/stats/_morestats.py:1559) (1 samples, 0.15%)</title><rect x="61.6099%" y="212" width="0.1548%" height="15" fill="rgb(249,174,33)" fg:x="398" fg:w="1"/><text x="61.8599%" y="222.50"></text></g><g><title>render (src/trader.py:537) (1 samples, 0.15%)</title><rect x="62.0743%" y="180" width="0.1548%" height="15" fill="rgb(233,201,37)" fg:x="401" fg:w="1"/><text x="62.3243%" y="190.50"></text></g><g><title>&lt;dictcomp&gt; (src/trader.py:539) (1 samples, 0.15%)</title><rect x="62.0743%" y="196" width="0.1548%" height="15" fill="rgb(221,78,26)" fg:x="401" fg:w="1"/><text x="62.3243%" y="206.50"></text></g><g><title>render (src/trader.py:541) (2 samples, 0.31%)</title><rect x="62.2291%" y="180" width="0.3096%" height="15" fill="rgb(250,127,30)" fg:x="402" fg:w="2"/><text x="62.4791%" y="190.50"></text></g><g><title>&lt;dictcomp&gt; (src/trader.py:542) (2 samples, 0.31%)</title><rect x="62.2291%" y="196" width="0.3096%" height="15" fill="rgb(230,49,44)" fg:x="402" fg:w="2"/><text x="62.4791%" y="206.50"></text></g><g><title>__init__ (pandas/core/frame.py:643) (1 samples, 0.15%)</title><rect x="62.5387%" y="212" width="0.1548%" height="15" fill="rgb(229,67,23)" fg:x="404" fg:w="1"/><text x="62.7887%" y="222.50"></text></g><g><title>__new__ (pandas/core/indexes/base.py:430) (1 samples, 0.15%)</title><rect x="62.8483%" y="244" width="0.1548%" height="15" fill="rgb(249,83,47)" fg:x="406" fg:w="1"/><text x="63.0983%" y="254.50"></text></g><g><title>__new__ (pandas/core/indexes/base.py:568) (1 samples, 0.15%)</title><rect x="63.0031%" y="244" width="0.1548%" height="15" fill="rgb(215,43,3)" fg:x="407" fg:w="1"/><text x="63.2531%" y="254.50"></text></g><g><title>_maybe_cast_data_without_dtype (pandas/core/indexes/base.py:7422) (1 samples, 0.15%)</title><rect x="63.0031%" y="260" width="0.1548%" height="15" fill="rgb(238,154,13)" fg:x="407" fg:w="1"/><text x="63.2531%" y="270.50"></text></g><g><title>__new__ (pandas/core/indexes/base.py:446) (1 samples, 0.15%)</title><rect x="63.1579%" y="260" width="0.1548%" height="15" fill="rgb(219,56,2)" fg:x="408" fg:w="1"/><text x="63.4079%" y="270.50"></text></g><g><title>maybe_extract_name (pandas/core/indexes/base.py:7376) (1 samples, 0.15%)</title><rect x="63.1579%" y="276" width="0.1548%" height="15" fill="rgb(233,0,4)" fg:x="408" fg:w="1"/><text x="63.4079%" y="286.50"></text></g><g><title>_instancecheck (pandas/core/dtypes/generic.py:45) (1 samples, 0.15%)</title><rect x="63.1579%" y="292" width="0.1548%" height="15" fill="rgb(235,30,7)" fg:x="408" fg:w="1"/><text x="63.4079%" y="302.50"></text></g><g><title>asarray_tuplesafe (pandas/core/common.py:246) (1 samples, 0.15%)</title><rect x="63.3127%" y="276" width="0.1548%" height="15" fill="rgb(250,79,13)" fg:x="409" fg:w="1"/><text x="63.5627%" y="286.50"></text></g><g><title>__enter__ (warnings.py:471) (1 samples, 0.15%)</title><rect x="63.3127%" y="292" width="0.1548%" height="15" fill="rgb(211,146,34)" fg:x="409" fg:w="1"/><text x="63.5627%" y="302.50"></text></g><g><title>__new__ (pandas/core/indexes/base.py:528) (2 samples, 0.31%)</title><rect x="63.3127%" y="260" width="0.3096%" height="15" fill="rgb(228,22,38)" fg:x="409" fg:w="2"/><text x="63.5627%" y="270.50"></text></g><g><title>asarray_tuplesafe (pandas/core/common.py:248) (1 samples, 0.15%)</title><rect x="63.4675%" y="276" width="0.1548%" height="15" fill="rgb(235,168,5)" fg:x="410" fg:w="1"/><text x="63.7175%" y="286.50"></text></g><g><title>simplefilter (warnings.py:179) (1 samples, 0.15%)</title><rect x="63.4675%" y="292" width="0.1548%" height="15" fill="rgb(221,155,16)" fg:x="410" fg:w="1"/><text x="63.7175%" y="302.50"></text></g><g><title>_add_filter (warnings.py:186) (1 samples, 0.15%)</title><rect x="63.4675%" y="308" width="0.1548%" height="15" fill="rgb(215,215,53)" fg:x="410" fg:w="1"/><text x="63.7175%" y="318.50"></text></g><g><title>dict_to_mgr (pandas/core/internals/construction.py:480) (8 samples, 1.24%)</title><rect x="62.6935%" y="228" width="1.2384%" height="15" fill="rgb(223,4,10)" fg:x="405" fg:w="8"/><text x="62.9435%" y="238.50"></text></g><g><title>__new__ (pandas/core/indexes/base.py:572) (5 samples, 0.77%)</title><rect x="63.1579%" y="244" width="0.7740%" height="15" fill="rgb(234,103,6)" fg:x="408" fg:w="5"/><text x="63.4079%" y="254.50"></text></g><g><title>__new__ (pandas/core/indexes/base.py:540) (2 samples, 0.31%)</title><rect x="63.6223%" y="260" width="0.3096%" height="15" fill="rgb(227,97,0)" fg:x="411" fg:w="2"/><text x="63.8723%" y="270.50"></text></g><g><title>_ensure_array (pandas/core/indexes/base.py:574) (2 samples, 0.31%)</title><rect x="63.6223%" y="276" width="0.3096%" height="15" fill="rgb(234,150,53)" fg:x="411" fg:w="2"/><text x="63.8723%" y="286.50"></text></g><g><title>maybe_iterable_to_list (pandas/core/common.py:303) (3 samples, 0.46%)</title><rect x="64.0867%" y="260" width="0.4644%" height="15" fill="rgb(228,201,54)" fg:x="414" fg:w="3"/><text x="64.3367%" y="270.50"></text></g><g><title>__instancecheck__ (abc.py:117) (2 samples, 0.31%)</title><rect x="64.5511%" y="276" width="0.3096%" height="15" fill="rgb(222,22,37)" fg:x="417" fg:w="2"/><text x="64.8011%" y="286.50"></text></g><g><title>maybe_iterable_to_list (pandas/core/common.py:307) (3 samples, 0.46%)</title><rect x="64.5511%" y="260" width="0.4644%" height="15" fill="rgb(237,53,32)" fg:x="417" fg:w="3"/><text x="64.8011%" y="270.50"></text></g><g><title>__instancecheck__ (abc.py:119) (1 samples, 0.15%)</title><rect x="64.8607%" y="276" width="0.1548%" height="15" fill="rgb(233,25,53)" fg:x="419" fg:w="1"/><text x="65.1107%" y="286.50"></text></g><g><title>dict_to_mgr (pandas/core/internals/construction.py:481) (8 samples, 1.24%)</title><rect x="63.9319%" y="228" width="1.2384%" height="15" fill="rgb(210,40,34)" fg:x="413" fg:w="8"/><text x="64.1819%" y="238.50"></text></g><g><title>&lt;listcomp&gt; (pandas/core/internals/construction.py:481) (8 samples, 1.24%)</title><rect x="63.9319%" y="244" width="1.2384%" height="15" fill="rgb(241,220,44)" fg:x="413" fg:w="8"/><text x="64.1819%" y="254.50"></text></g><g><title>maybe_iterable_to_list (pandas/core/common.py:309) (1 samples, 0.15%)</title><rect x="65.0155%" y="260" width="0.1548%" height="15" fill="rgb(235,28,35)" fg:x="420" fg:w="1"/><text x="65.2655%" y="270.50"></text></g><g><title>_extract_index (pandas/core/internals/construction.py:643) (3 samples, 0.46%)</title><rect x="65.3251%" y="260" width="0.4644%" height="15" fill="rgb(210,56,17)" fg:x="422" fg:w="3"/><text x="65.5751%" y="270.50"></text></g><g><title>_instancecheck (pandas/core/dtypes/generic.py:45) (3 samples, 0.46%)</title><rect x="65.3251%" y="276" width="0.4644%" height="15" fill="rgb(224,130,29)" fg:x="422" fg:w="3"/><text x="65.5751%" y="286.50"></text></g><g><title>_extract_index (pandas/core/internals/construction.py:646) (1 samples, 0.15%)</title><rect x="65.7895%" y="260" width="0.1548%" height="15" fill="rgb(235,212,8)" fg:x="425" fg:w="1"/><text x="66.0395%" y="270.50"></text></g><g><title>_extract_index (pandas/core/internals/construction.py:649) (4 samples, 0.62%)</title><rect x="65.9443%" y="260" width="0.6192%" height="15" fill="rgb(223,33,50)" fg:x="426" fg:w="4"/><text x="66.1943%" y="270.50"></text></g><g><title>arrays_to_mgr (pandas/core/internals/construction.py:118) (9 samples, 1.39%)</title><rect x="65.3251%" y="244" width="1.3932%" height="15" fill="rgb(219,149,13)" fg:x="422" fg:w="9"/><text x="65.5751%" y="254.50"></text></g><g><title>_extract_index (pandas/core/internals/construction.py:687) (1 samples, 0.15%)</title><rect x="66.5635%" y="260" width="0.1548%" height="15" fill="rgb(250,156,29)" fg:x="430" fg:w="1"/><text x="66.8135%" y="270.50"></text></g><g><title>ensure_index (pandas/core/indexes/base.py:7277) (1 samples, 0.15%)</title><rect x="66.5635%" y="276" width="0.1548%" height="15" fill="rgb(216,193,19)" fg:x="430" fg:w="1"/><text x="66.8135%" y="286.50"></text></g><g><title>_instancecheck (pandas/core/dtypes/generic.py:45) (2 samples, 0.31%)</title><rect x="66.7183%" y="276" width="0.3096%" height="15" fill="rgb(216,135,14)" fg:x="431" fg:w="2"/><text x="66.9683%" y="286.50"></text></g><g><title>_check (pandas/core/dtypes/generic.py:40) (1 samples, 0.15%)</title><rect x="67.0279%" y="292" width="0.1548%" height="15" fill="rgb(241,47,5)" fg:x="433" fg:w="1"/><text x="67.2779%" y="302.50"></text></g><g><title>_homogenize (pandas/core/internals/construction.py:593) (4 samples, 0.62%)</title><rect x="66.7183%" y="260" width="0.6192%" height="15" fill="rgb(233,42,35)" fg:x="431" fg:w="4"/><text x="66.9683%" y="270.50"></text></g><g><title>_instancecheck (pandas/core/dtypes/generic.py:47) (2 samples, 0.31%)</title><rect x="67.0279%" y="276" width="0.3096%" height="15" fill="rgb(231,13,6)" fg:x="433" fg:w="2"/><text x="67.2779%" y="286.50"></text></g><g><title>_check (pandas/core/dtypes/generic.py:41) (1 samples, 0.15%)</title><rect x="67.1827%" y="292" width="0.1548%" height="15" fill="rgb(207,181,40)" fg:x="434" fg:w="1"/><text x="67.4327%" y="302.50"></text></g><g><title>_homogenize (pandas/core/internals/construction.py:615) (1 samples, 0.15%)</title><rect x="67.3375%" y="260" width="0.1548%" height="15" fill="rgb(254,173,49)" fg:x="435" fg:w="1"/><text x="67.5875%" y="270.50"></text></g><g><title>sanitize_array (pandas/core/construction.py:493) (6 samples, 0.93%)</title><rect x="67.6471%" y="276" width="0.9288%" height="15" fill="rgb(221,1,38)" fg:x="437" fg:w="6"/><text x="67.8971%" y="286.50"></text></g><g><title>_instancecheck (pandas/core/dtypes/generic.py:45) (4 samples, 0.62%)</title><rect x="69.5046%" y="308" width="0.6192%" height="15" fill="rgb(206,124,46)" fg:x="449" fg:w="4"/><text x="69.7546%" y="318.50"></text></g><g><title>is_thread_alive (_pydev_bundle/pydev_is_thread_alive.py:9) (1 samples, 0.15%)</title><rect x="69.9690%" y="324" width="0.1548%" height="15" fill="rgb(249,21,11)" fg:x="452" fg:w="1"/><text x="70.2190%" y="334.50"></text></g><g><title>_check (pandas/core/dtypes/generic.py:40) (1 samples, 0.15%)</title><rect x="70.4334%" y="324" width="0.1548%" height="15" fill="rgb(222,201,40)" fg:x="455" fg:w="1"/><text x="70.6834%" y="334.50"></text></g><g><title>extract_array (pandas/core/construction.py:444) (11 samples, 1.70%)</title><rect x="69.0402%" y="292" width="1.7028%" height="15" fill="rgb(235,61,29)" fg:x="446" fg:w="11"/><text x="69.2902%" y="302.50"></text></g><g><title>_instancecheck (pandas/core/dtypes/generic.py:47) (4 samples, 0.62%)</title><rect x="70.1238%" y="308" width="0.6192%" height="15" fill="rgb(219,207,3)" fg:x="453" fg:w="4"/><text x="70.3738%" y="318.50"></text></g><g><title>_check (pandas/core/dtypes/generic.py:41) (1 samples, 0.15%)</title><rect x="70.5882%" y="324" width="0.1548%" height="15" fill="rgb(222,56,46)" fg:x="456" fg:w="1"/><text x="70.8382%" y="334.50"></text></g><g><title>_instancecheck (pandas/core/dtypes/generic.py:45) (3 samples, 0.46%)</title><rect x="70.7430%" y="308" width="0.4644%" height="15" fill="rgb(239,76,54)" fg:x="457" fg:w="3"/><text x="70.9930%" y="318.50"></text></g><g><title>_check (pandas/core/dtypes/generic.py:40) (4 samples, 0.62%)</title><rect x="71.5170%" y="324" width="0.6192%" height="15" fill="rgb(231,124,27)" fg:x="462" fg:w="4"/><text x="71.7670%" y="334.50"></text></g><g><title>extract_array (pandas/core/construction.py:455) (12 samples, 1.86%)</title><rect x="70.7430%" y="292" width="1.8576%" height="15" fill="rgb(249,195,6)" fg:x="457" fg:w="12"/><text x="70.9930%" y="302.50">e..</text></g><g><title>_instancecheck (pandas/core/dtypes/generic.py:47) (9 samples, 1.39%)</title><rect x="71.2074%" y="308" width="1.3932%" height="15" fill="rgb(237,174,47)" fg:x="460" fg:w="9"/><text x="71.4574%" y="318.50"></text></g><g><title>_check (pandas/core/dtypes/generic.py:41) (3 samples, 0.46%)</title><rect x="72.1362%" y="324" width="0.4644%" height="15" fill="rgb(206,201,31)" fg:x="466" fg:w="3"/><text x="72.3862%" y="334.50"></text></g><g><title>extract_array (pandas/core/construction.py:456) (1 samples, 0.15%)</title><rect x="72.6006%" y="292" width="0.1548%" height="15" fill="rgb(231,57,52)" fg:x="469" fg:w="1"/><text x="72.8506%" y="302.50"></text></g><g><title>sanitize_array (pandas/core/construction.py:534) (28 samples, 4.33%)</title><rect x="68.5759%" y="276" width="4.3344%" height="15" fill="rgb(248,177,22)" fg:x="443" fg:w="28"/><text x="68.8259%" y="286.50">sanit..</text></g><g><title>extract_array (pandas/core/construction.py:458) (1 samples, 0.15%)</title><rect x="72.7554%" y="292" width="0.1548%" height="15" fill="rgb(215,211,37)" fg:x="470" fg:w="1"/><text x="73.0054%" y="302.50"></text></g><g><title>sanitize_array (pandas/core/construction.py:536) (3 samples, 0.46%)</title><rect x="72.9102%" y="276" width="0.4644%" height="15" fill="rgb(241,128,51)" fg:x="471" fg:w="3"/><text x="73.1602%" y="286.50"></text></g><g><title>sanitize_array (pandas/core/construction.py:540) (1 samples, 0.15%)</title><rect x="73.3746%" y="276" width="0.1548%" height="15" fill="rgb(227,165,31)" fg:x="474" fg:w="1"/><text x="73.6246%" y="286.50"></text></g><g><title>sanitize_array (pandas/core/construction.py:543) (2 samples, 0.31%)</title><rect x="73.5294%" y="276" width="0.3096%" height="15" fill="rgb(228,167,24)" fg:x="475" fg:w="2"/><text x="73.7794%" y="286.50"></text></g><g><title>sanitize_array (pandas/core/construction.py:545) (3 samples, 0.46%)</title><rect x="73.8390%" y="276" width="0.4644%" height="15" fill="rgb(228,143,12)" fg:x="477" fg:w="3"/><text x="74.0890%" y="286.50"></text></g><g><title>sanitize_array (pandas/core/construction.py:547) (2 samples, 0.31%)</title><rect x="74.3034%" y="276" width="0.3096%" height="15" fill="rgb(249,149,8)" fg:x="480" fg:w="2"/><text x="74.5534%" y="286.50"></text></g><g><title>__len__ (pandas/core/indexes/range.py:946) (5 samples, 0.77%)</title><rect x="74.6130%" y="292" width="0.7740%" height="15" fill="rgb(243,35,44)" fg:x="482" fg:w="5"/><text x="74.8630%" y="302.50"></text></g><g><title>is_thread_alive (_pydev_bundle/pydev_is_thread_alive.py:10) (1 samples, 0.15%)</title><rect x="75.2322%" y="308" width="0.1548%" height="15" fill="rgb(246,89,9)" fg:x="486" fg:w="1"/><text x="75.4822%" y="318.50"></text></g><g><title>construct_1d_arraylike_from_scalar (pandas/core/dtypes/cast.py:1673) (2 samples, 0.31%)</title><rect x="75.3870%" y="292" width="0.3096%" height="15" fill="rgb(233,213,13)" fg:x="487" fg:w="2"/><text x="75.6370%" y="302.50"></text></g><g><title>construct_1d_arraylike_from_scalar (pandas/core/dtypes/cast.py:1693) (1 samples, 0.15%)</title><rect x="75.6966%" y="292" width="0.1548%" height="15" fill="rgb(233,141,41)" fg:x="489" fg:w="1"/><text x="75.9466%" y="302.50"></text></g><g><title>infer_dtype_from_scalar (pandas/core/dtypes/cast.py:756) (5 samples, 0.77%)</title><rect x="76.1610%" y="308" width="0.7740%" height="15" fill="rgb(239,167,4)" fg:x="492" fg:w="5"/><text x="76.4110%" y="318.50"></text></g><g><title>infer_dtype_from_scalar (pandas/core/dtypes/cast.py:767) (1 samples, 0.15%)</title><rect x="76.9350%" y="308" width="0.1548%" height="15" fill="rgb(209,217,16)" fg:x="497" fg:w="1"/><text x="77.1850%" y="318.50"></text></g><g><title>infer_dtype_from_scalar (pandas/core/dtypes/cast.py:788) (1 samples, 0.15%)</title><rect x="77.0898%" y="308" width="0.1548%" height="15" fill="rgb(219,88,35)" fg:x="498" fg:w="1"/><text x="77.3398%" y="318.50"></text></g><g><title>infer_dtype_from_scalar (pandas/core/dtypes/cast.py:804) (1 samples, 0.15%)</title><rect x="77.2446%" y="308" width="0.1548%" height="15" fill="rgb(220,193,23)" fg:x="499" fg:w="1"/><text x="77.4946%" y="318.50"></text></g><g><title>infer_dtype_from_scalar (pandas/core/dtypes/cast.py:806) (1 samples, 0.15%)</title><rect x="77.3994%" y="308" width="0.1548%" height="15" fill="rgb(230,90,52)" fg:x="500" fg:w="1"/><text x="77.6494%" y="318.50"></text></g><g><title>infer_dtype_from_scalar (pandas/core/dtypes/cast.py:809) (1 samples, 0.15%)</title><rect x="77.5542%" y="308" width="0.1548%" height="15" fill="rgb(252,106,19)" fg:x="501" fg:w="1"/><text x="77.8042%" y="318.50"></text></g><g><title>infer_dtype_from_scalar (pandas/core/dtypes/cast.py:816) (1 samples, 0.15%)</title><rect x="77.7090%" y="308" width="0.1548%" height="15" fill="rgb(206,74,20)" fg:x="502" fg:w="1"/><text x="77.9590%" y="318.50"></text></g><g><title>infer_dtype_from_scalar (pandas/core/dtypes/cast.py:818) (1 samples, 0.15%)</title><rect x="77.8638%" y="308" width="0.1548%" height="15" fill="rgb(230,138,44)" fg:x="503" fg:w="1"/><text x="78.1138%" y="318.50"></text></g><g><title>construct_1d_arraylike_from_scalar (pandas/core/dtypes/cast.py:1694) (15 samples, 2.32%)</title><rect x="75.8514%" y="292" width="2.3220%" height="15" fill="rgb(235,182,43)" fg:x="490" fg:w="15"/><text x="76.1014%" y="302.50">c..</text></g><g><title>infer_dtype_from_scalar (pandas/core/dtypes/cast.py:829) (1 samples, 0.15%)</title><rect x="78.0186%" y="308" width="0.1548%" height="15" fill="rgb(242,16,51)" fg:x="504" fg:w="1"/><text x="78.2686%" y="318.50"></text></g><g><title>construct_1d_arraylike_from_scalar (pandas/core/dtypes/cast.py:1698) (1 samples, 0.15%)</title><rect x="78.1734%" y="292" width="0.1548%" height="15" fill="rgb(248,9,4)" fg:x="505" fg:w="1"/><text x="78.4234%" y="302.50"></text></g><g><title>is_integer_dtype (pandas/core/dtypes/common.py:684) (1 samples, 0.15%)</title><rect x="78.3282%" y="308" width="0.1548%" height="15" fill="rgb(210,31,22)" fg:x="506" fg:w="1"/><text x="78.5782%" y="318.50"></text></g><g><title>_is_dtype_type (pandas/core/dtypes/common.py:1591) (7 samples, 1.08%)</title><rect x="78.7926%" y="324" width="1.0836%" height="15" fill="rgb(239,54,39)" fg:x="509" fg:w="7"/><text x="79.0426%" y="334.50"></text></g><g><title>_is_dtype_type (pandas/core/dtypes/common.py:1609) (1 samples, 0.15%)</title><rect x="79.8762%" y="324" width="0.1548%" height="15" fill="rgb(230,99,41)" fg:x="516" fg:w="1"/><text x="80.1262%" y="334.50"></text></g><g><title>_is_dtype_type (pandas/core/dtypes/common.py:1610) (1 samples, 0.15%)</title><rect x="80.0310%" y="324" width="0.1548%" height="15" fill="rgb(253,106,12)" fg:x="517" fg:w="1"/><text x="80.2810%" y="334.50"></text></g><g><title>&lt;lambda&gt; (pandas/core/dtypes/common.py:156) (1 samples, 0.15%)</title><rect x="80.0310%" y="340" width="0.1548%" height="15" fill="rgb(213,46,41)" fg:x="517" fg:w="1"/><text x="80.2810%" y="350.50"></text></g><g><title>classes_and_not_datetimelike (pandas/core/dtypes/common.py:151) (1 samples, 0.15%)</title><rect x="80.1858%" y="324" width="0.1548%" height="15" fill="rgb(215,133,35)" fg:x="518" fg:w="1"/><text x="80.4358%" y="334.50"></text></g><g><title>construct_1d_arraylike_from_scalar (pandas/core/dtypes/cast.py:1705) (14 samples, 2.17%)</title><rect x="78.3282%" y="292" width="2.1672%" height="15" fill="rgb(213,28,5)" fg:x="506" fg:w="14"/><text x="78.5782%" y="302.50">c..</text></g><g><title>is_integer_dtype (pandas/core/dtypes/common.py:733) (13 samples, 2.01%)</title><rect x="78.4830%" y="308" width="2.0124%" height="15" fill="rgb(215,77,49)" fg:x="507" fg:w="13"/><text x="78.7330%" y="318.50">i..</text></g><g><title>classes_and_not_datetimelike (pandas/core/dtypes/common.py:156) (1 samples, 0.15%)</title><rect x="80.3406%" y="324" width="0.1548%" height="15" fill="rgb(248,100,22)" fg:x="519" fg:w="1"/><text x="80.5906%" y="334.50"></text></g><g><title>construct_1d_arraylike_from_scalar (pandas/core/dtypes/cast.py:1708) (4 samples, 0.62%)</title><rect x="80.4954%" y="292" width="0.6192%" height="15" fill="rgb(208,67,9)" fg:x="520" fg:w="4"/><text x="80.7454%" y="302.50"></text></g><g><title>construct_1d_arraylike_from_scalar (pandas/core/dtypes/cast.py:1713) (1 samples, 0.15%)</title><rect x="81.1146%" y="292" width="0.1548%" height="15" fill="rgb(219,133,21)" fg:x="524" fg:w="1"/><text x="81.3646%" y="302.50"></text></g><g><title>construct_1d_arraylike_from_scalar (pandas/core/dtypes/cast.py:1715) (1 samples, 0.15%)</title><rect x="81.2693%" y="292" width="0.1548%" height="15" fill="rgb(246,46,29)" fg:x="525" fg:w="1"/><text x="81.5193%" y="302.50"></text></g><g><title>construct_1d_arraylike_from_scalar (pandas/core/dtypes/cast.py:1717) (3 samples, 0.46%)</title><rect x="81.4241%" y="292" width="0.4644%" height="15" fill="rgb(246,185,52)" fg:x="526" fg:w="3"/><text x="81.6741%" y="302.50"></text></g><g><title>construct_1d_arraylike_from_scalar (pandas/core/dtypes/cast.py:1718) (1 samples, 0.15%)</title><rect x="81.8885%" y="292" width="0.1548%" height="15" fill="rgb(252,136,11)" fg:x="529" fg:w="1"/><text x="82.1385%" y="302.50"></text></g><g><title>sanitize_array (pandas/core/construction.py:548) (50 samples, 7.74%)</title><rect x="74.6130%" y="276" width="7.7399%" height="15" fill="rgb(219,138,53)" fg:x="482" fg:w="50"/><text x="74.8630%" y="286.50">sanitize_ar..</text></g><g><title>construct_1d_arraylike_from_scalar (pandas/core/dtypes/cast.py:1720) (2 samples, 0.31%)</title><rect x="82.0433%" y="292" width="0.3096%" height="15" fill="rgb(211,51,23)" fg:x="530" fg:w="2"/><text x="82.2933%" y="302.50"></text></g><g><title>full (numpy/core/numeric.py:323) (1 samples, 0.15%)</title><rect x="82.3529%" y="308" width="0.1548%" height="15" fill="rgb(247,221,28)" fg:x="532" fg:w="1"/><text x="82.6029%" y="318.50"></text></g><g><title>full (numpy/core/numeric.py:329) (1 samples, 0.15%)</title><rect x="82.5077%" y="308" width="0.1548%" height="15" fill="rgb(251,222,45)" fg:x="533" fg:w="1"/><text x="82.7577%" y="318.50"></text></g><g><title>sanitize_array (pandas/core/construction.py:642) (3 samples, 0.46%)</title><rect x="82.3529%" y="276" width="0.4644%" height="15" fill="rgb(217,162,53)" fg:x="532" fg:w="3"/><text x="82.6029%" y="286.50"></text></g><g><title>maybe_convert_platform (pandas/core/dtypes/cast.py:135) (3 samples, 0.46%)</title><rect x="82.3529%" y="292" width="0.4644%" height="15" fill="rgb(229,93,14)" fg:x="532" fg:w="3"/><text x="82.6029%" y="302.50"></text></g><g><title>full (numpy/core/numeric.py:330) (1 samples, 0.15%)</title><rect x="82.6625%" y="308" width="0.1548%" height="15" fill="rgb(209,67,49)" fg:x="534" fg:w="1"/><text x="82.9125%" y="318.50"></text></g><g><title>maybe_infer_to_datetimelike (pandas/core/dtypes/cast.py:1178) (1 samples, 0.15%)</title><rect x="82.9721%" y="292" width="0.1548%" height="15" fill="rgb(213,87,29)" fg:x="536" fg:w="1"/><text x="83.2221%" y="302.50"></text></g><g><title>sanitize_array (pandas/core/construction.py:645) (3 samples, 0.46%)</title><rect x="82.8173%" y="276" width="0.4644%" height="15" fill="rgb(205,151,52)" fg:x="535" fg:w="3"/><text x="83.0673%" y="286.50"></text></g><g><title>maybe_infer_to_datetimelike (pandas/core/dtypes/cast.py:1243) (1 samples, 0.15%)</title><rect x="83.1269%" y="292" width="0.1548%" height="15" fill="rgb(253,215,39)" fg:x="537" fg:w="1"/><text x="83.3769%" y="302.50"></text></g><g><title>_homogenize (pandas/core/internals/construction.py:617) (103 samples, 15.94%)</title><rect x="67.4923%" y="260" width="15.9443%" height="15" fill="rgb(221,220,41)" fg:x="436" fg:w="103"/><text x="67.7423%" y="270.50">_homogenize (pandas/core/..</text></g><g><title>sanitize_array (pandas/core/construction.py:647) (1 samples, 0.15%)</title><rect x="83.2817%" y="276" width="0.1548%" height="15" fill="rgb(218,133,21)" fg:x="538" fg:w="1"/><text x="83.5317%" y="286.50"></text></g><g><title>_sanitize_ndim (pandas/core/construction.py:676) (1 samples, 0.15%)</title><rect x="83.2817%" y="292" width="0.1548%" height="15" fill="rgb(221,193,43)" fg:x="538" fg:w="1"/><text x="83.5317%" y="302.50"></text></g><g><title>require_length_match (pandas/core/common.py:566) (3 samples, 0.46%)</title><rect x="83.4365%" y="276" width="0.4644%" height="15" fill="rgb(240,128,52)" fg:x="539" fg:w="3"/><text x="83.6865%" y="286.50"></text></g><g><title>__len__ (pandas/core/indexes/range.py:946) (3 samples, 0.46%)</title><rect x="84.5201%" y="292" width="0.4644%" height="15" fill="rgb(253,114,12)" fg:x="546" fg:w="3"/><text x="84.7701%" y="302.50"></text></g><g><title>arrays_to_mgr (pandas/core/internals/construction.py:123) (119 samples, 18.42%)</title><rect x="66.7183%" y="244" width="18.4211%" height="15" fill="rgb(215,223,47)" fg:x="431" fg:w="119"/><text x="66.9683%" y="254.50">arrays_to_mgr (pandas/core/in..</text></g><g><title>_homogenize (pandas/core/internals/construction.py:620) (11 samples, 1.70%)</title><rect x="83.4365%" y="260" width="1.7028%" height="15" fill="rgb(248,225,23)" fg:x="539" fg:w="11"/><text x="83.6865%" y="270.50"></text></g><g><title>require_length_match (pandas/core/common.py:570) (8 samples, 1.24%)</title><rect x="83.9009%" y="276" width="1.2384%" height="15" fill="rgb(250,108,0)" fg:x="542" fg:w="8"/><text x="84.1509%" y="286.50"></text></g><g><title>__len__ (pandas/core/indexes/range.py:950) (1 samples, 0.15%)</title><rect x="84.9845%" y="292" width="0.1548%" height="15" fill="rgb(228,208,7)" fg:x="549" fg:w="1"/><text x="85.2345%" y="302.50"></text></g><g><title>_grouping_func (pandas/core/internals/managers.py:2237) (3 samples, 0.46%)</title><rect x="85.4489%" y="292" width="0.4644%" height="15" fill="rgb(244,45,10)" fg:x="552" fg:w="3"/><text x="85.6989%" y="302.50"></text></g><g><title>is_thread_alive (_pydev_bundle/pydev_is_thread_alive.py:10) (1 samples, 0.15%)</title><rect x="85.7585%" y="308" width="0.1548%" height="15" fill="rgb(207,125,25)" fg:x="554" fg:w="1"/><text x="86.0085%" y="318.50"></text></g><g><title>_grouping_func (pandas/core/internals/managers.py:2243) (5 samples, 0.77%)</title><rect x="85.9133%" y="292" width="0.7740%" height="15" fill="rgb(210,195,18)" fg:x="555" fg:w="5"/><text x="86.1633%" y="302.50"></text></g><g><title>is_1d_only_ea_dtype (pandas/core/dtypes/common.py:1420) (5 samples, 0.77%)</title><rect x="85.9133%" y="308" width="0.7740%" height="15" fill="rgb(249,80,12)" fg:x="555" fg:w="5"/><text x="86.1633%" y="318.50"></text></g><g><title>_stack_arrays (pandas/core/internals/managers.py:2312) (1 samples, 0.15%)</title><rect x="86.6873%" y="292" width="0.1548%" height="15" fill="rgb(221,65,9)" fg:x="560" fg:w="1"/><text x="86.9373%" y="302.50"></text></g><g><title>_form_blocks (pandas/core/internals/managers.py:2273) (17 samples, 2.63%)</title><rect x="85.1393%" y="276" width="2.6316%" height="15" fill="rgb(235,49,36)" fg:x="550" fg:w="17"/><text x="85.3893%" y="286.50">_f..</text></g><g><title>_stack_arrays (pandas/core/internals/managers.py:2314) (6 samples, 0.93%)</title><rect x="86.8421%" y="292" width="0.9288%" height="15" fill="rgb(225,32,20)" fg:x="561" fg:w="6"/><text x="87.0921%" y="302.50"></text></g><g><title>require (numpy/core/_asarray.py:108) (1 samples, 0.15%)</title><rect x="88.0805%" y="292" width="0.1548%" height="15" fill="rgb(215,141,46)" fg:x="569" fg:w="1"/><text x="88.3305%" y="302.50"></text></g><g><title>_form_blocks (pandas/core/internals/managers.py:2276) (4 samples, 0.62%)</title><rect x="87.7709%" y="276" width="0.6192%" height="15" fill="rgb(250,160,47)" fg:x="567" fg:w="4"/><text x="88.0209%" y="286.50"></text></g><g><title>require (numpy/core/_asarray.py:126) (1 samples, 0.15%)</title><rect x="88.2353%" y="292" width="0.1548%" height="15" fill="rgb(216,222,40)" fg:x="570" fg:w="1"/><text x="88.4853%" y="302.50"></text></g><g><title>create_block_manager_from_column_arrays (pandas/core/internals/managers.py:2199) (22 samples, 3.41%)</title><rect x="85.1393%" y="260" width="3.4056%" height="15" fill="rgb(234,217,39)" fg:x="550" fg:w="22"/><text x="85.3893%" y="270.50">cre..</text></g><g><title>_form_blocks (pandas/core/internals/managers.py:2277) (1 samples, 0.15%)</title><rect x="88.3901%" y="276" width="0.1548%" height="15" fill="rgb(207,178,40)" fg:x="571" fg:w="1"/><text x="88.6401%" y="286.50"></text></g><g><title>render (src/trader.py:547) (170 samples, 26.32%)</title><rect x="62.5387%" y="180" width="26.3158%" height="15" fill="rgb(221,136,13)" fg:x="404" fg:w="170"/><text x="62.7887%" y="190.50">render (src/trader.py:547)</text></g><g><title>from_dict (pandas/core/frame.py:1764) (170 samples, 26.32%)</title><rect x="62.5387%" y="196" width="26.3158%" height="15" fill="rgb(249,199,10)" fg:x="404" fg:w="170"/><text x="62.7887%" y="206.50">from_dict (pandas/core/frame.py:1764)</text></g><g><title>__init__ (pandas/core/frame.py:664) (169 samples, 26.16%)</title><rect x="62.6935%" y="212" width="26.1610%" height="15" fill="rgb(249,222,13)" fg:x="405" fg:w="169"/><text x="62.9435%" y="222.50">__init__ (pandas/core/frame.py:664)</text></g><g><title>dict_to_mgr (pandas/core/internals/construction.py:493) (153 samples, 23.68%)</title><rect x="65.1703%" y="228" width="23.6842%" height="15" fill="rgb(244,185,38)" fg:x="421" fg:w="153"/><text x="65.4203%" y="238.50">dict_to_mgr (pandas/core/internals/con..</text></g><g><title>arrays_to_mgr (pandas/core/internals/construction.py:154) (24 samples, 3.72%)</title><rect x="85.1393%" y="244" width="3.7152%" height="15" fill="rgb(236,202,9)" fg:x="550" fg:w="24"/><text x="85.3893%" y="254.50">arra..</text></g><g><title>create_block_manager_from_column_arrays (pandas/core/internals/managers.py:2204) (2 samples, 0.31%)</title><rect x="88.5449%" y="260" width="0.3096%" height="15" fill="rgb(250,229,37)" fg:x="572" fg:w="2"/><text x="88.7949%" y="270.50"></text></g><g><title>_consolidate_inplace (pandas/core/internals/managers.py:1869) (1 samples, 0.15%)</title><rect x="88.6997%" y="276" width="0.1548%" height="15" fill="rgb(206,174,23)" fg:x="573" fg:w="1"/><text x="88.9497%" y="286.50"></text></g><g><title>is_consolidated (pandas/core/internals/managers.py:1851) (1 samples, 0.15%)</title><rect x="88.6997%" y="292" width="0.1548%" height="15" fill="rgb(211,33,43)" fg:x="573" fg:w="1"/><text x="88.9497%" y="302.50"></text></g><g><title>_consolidate_check (pandas/core/internals/managers.py:1860) (1 samples, 0.15%)</title><rect x="88.6997%" y="308" width="0.1548%" height="15" fill="rgb(245,58,50)" fg:x="573" fg:w="1"/><text x="88.9497%" y="318.50"></text></g><g><title>&lt;listcomp&gt; (pandas/core/internals/managers.py:1860) (1 samples, 0.15%)</title><rect x="88.6997%" y="324" width="0.1548%" height="15" fill="rgb(244,68,36)" fg:x="573" fg:w="1"/><text x="88.9497%" y="334.50"></text></g><g><title>concat (pandas/core/reshape/concat.py:146) (1 samples, 0.15%)</title><rect x="89.0093%" y="212" width="0.1548%" height="15" fill="rgb(232,229,15)" fg:x="575" fg:w="1"/><text x="89.2593%" y="222.50"></text></g><g><title>not_none (pandas/core/common.py:178) (1 samples, 0.15%)</title><rect x="89.1641%" y="244" width="0.1548%" height="15" fill="rgb(254,30,23)" fg:x="576" fg:w="1"/><text x="89.4141%" y="254.50"></text></g><g><title>__init__ (pandas/core/reshape/concat.py:428) (2 samples, 0.31%)</title><rect x="89.1641%" y="228" width="0.3096%" height="15" fill="rgb(235,160,14)" fg:x="576" fg:w="2"/><text x="89.4141%" y="238.50"></text></g><g><title>not_none (pandas/core/common.py:182) (1 samples, 0.15%)</title><rect x="89.3189%" y="244" width="0.1548%" height="15" fill="rgb(212,155,44)" fg:x="577" fg:w="1"/><text x="89.5689%" y="254.50"></text></g><g><title>__init__ (pandas/core/reshape/concat.py:453) (1 samples, 0.15%)</title><rect x="89.4737%" y="228" width="0.1548%" height="15" fill="rgb(226,2,50)" fg:x="578" fg:w="1"/><text x="89.7237%" y="238.50"></text></g><g><title>_instancecheck (pandas/core/dtypes/generic.py:47) (1 samples, 0.15%)</title><rect x="89.4737%" y="244" width="0.1548%" height="15" fill="rgb(234,177,6)" fg:x="578" fg:w="1"/><text x="89.7237%" y="254.50"></text></g><g><title>_check (pandas/core/dtypes/generic.py:41) (1 samples, 0.15%)</title><rect x="89.4737%" y="260" width="0.1548%" height="15" fill="rgb(217,24,9)" fg:x="578" fg:w="1"/><text x="89.7237%" y="270.50"></text></g><g><title>__init__ (pandas/core/reshape/concat.py:476) (1 samples, 0.15%)</title><rect x="89.6285%" y="228" width="0.1548%" height="15" fill="rgb(220,13,46)" fg:x="579" fg:w="1"/><text x="89.8785%" y="238.50"></text></g><g><title>_get_new_axes (pandas/core/reshape/concat.py:631) (1 samples, 0.15%)</title><rect x="89.7833%" y="244" width="0.1548%" height="15" fill="rgb(239,221,27)" fg:x="580" fg:w="1"/><text x="90.0333%" y="254.50"></text></g><g><title>get_objs_combined_axis (pandas/core/indexes/api.py:104) (1 samples, 0.15%)</title><rect x="89.9381%" y="292" width="0.1548%" height="15" fill="rgb(222,198,25)" fg:x="581" fg:w="1"/><text x="90.1881%" y="302.50"></text></g><g><title>&lt;listcomp&gt; (pandas/core/indexes/api.py:104) (1 samples, 0.15%)</title><rect x="89.9381%" y="308" width="0.1548%" height="15" fill="rgb(211,99,13)" fg:x="581" fg:w="1"/><text x="90.1881%" y="318.50"></text></g><g><title>_get_combined_index (pandas/core/indexes/api.py:148) (1 samples, 0.15%)</title><rect x="90.0929%" y="308" width="0.1548%" height="15" fill="rgb(232,111,31)" fg:x="582" fg:w="1"/><text x="90.3429%" y="318.50"></text></g><g><title>_get_distinct_objs (pandas/core/indexes/api.py:116) (1 samples, 0.15%)</title><rect x="90.0929%" y="324" width="0.1548%" height="15" fill="rgb(245,82,37)" fg:x="582" fg:w="1"/><text x="90.3429%" y="334.50"></text></g><g><title>is_ (pandas/core/indexes/base.py:839) (1 samples, 0.15%)</title><rect x="90.2477%" y="372" width="0.1548%" height="15" fill="rgb(227,149,46)" fg:x="583" fg:w="1"/><text x="90.4977%" y="382.50"></text></g><g><title>equals (pandas/core/indexes/base.py:5523) (2 samples, 0.31%)</title><rect x="90.2477%" y="356" width="0.3096%" height="15" fill="rgb(218,36,50)" fg:x="583" fg:w="2"/><text x="90.4977%" y="366.50"></text></g><g><title>is_ (pandas/core/indexes/base.py:863) (1 samples, 0.15%)</title><rect x="90.4025%" y="372" width="0.1548%" height="15" fill="rgb(226,80,48)" fg:x="584" fg:w="1"/><text x="90.6525%" y="382.50"></text></g><g><title>_array_equivalent_object (pandas/core/dtypes/missing.py:568) (1 samples, 0.15%)</title><rect x="90.5573%" y="388" width="0.1548%" height="15" fill="rgb(238,224,15)" fg:x="585" fg:w="1"/><text x="90.8073%" y="398.50"></text></g><g><title>union_indexes (pandas/core/indexes/api.py:316) (4 samples, 0.62%)</title><rect x="90.2477%" y="324" width="0.6192%" height="15" fill="rgb(241,136,10)" fg:x="583" fg:w="4"/><text x="90.4977%" y="334.50"></text></g><g><title>&lt;genexpr&gt; (pandas/core/indexes/api.py:316) (4 samples, 0.62%)</title><rect x="90.2477%" y="340" width="0.6192%" height="15" fill="rgb(208,32,45)" fg:x="583" fg:w="4"/><text x="90.4977%" y="350.50"></text></g><g><title>equals (pandas/core/indexes/base.py:5549) (2 samples, 0.31%)</title><rect x="90.5573%" y="356" width="0.3096%" height="15" fill="rgb(207,135,9)" fg:x="585" fg:w="2"/><text x="90.8073%" y="366.50"></text></g><g><title>array_equivalent (pandas/core/dtypes/missing.py:527) (2 samples, 0.31%)</title><rect x="90.5573%" y="372" width="0.3096%" height="15" fill="rgb(206,86,44)" fg:x="585" fg:w="2"/><text x="90.8073%" y="382.50"></text></g><g><title>_array_equivalent_object (pandas/core/dtypes/missing.py:575) (1 samples, 0.15%)</title><rect x="90.7121%" y="388" width="0.1548%" height="15" fill="rgb(245,177,15)" fg:x="586" fg:w="1"/><text x="90.9621%" y="398.50"></text></g><g><title>get_unanimous_names (pandas/core/indexes/base.py:7450) (1 samples, 0.15%)</title><rect x="90.8669%" y="340" width="0.1548%" height="15" fill="rgb(206,64,50)" fg:x="587" fg:w="1"/><text x="91.1169%" y="350.50"></text></g><g><title>&lt;listcomp&gt; (pandas/core/indexes/base.py:7450) (1 samples, 0.15%)</title><rect x="90.8669%" y="356" width="0.1548%" height="15" fill="rgb(234,36,40)" fg:x="587" fg:w="1"/><text x="91.1169%" y="366.50"></text></g><g><title>_get_names (pandas/core/indexes/base.py:1820) (1 samples, 0.15%)</title><rect x="90.8669%" y="372" width="0.1548%" height="15" fill="rgb(213,64,8)" fg:x="587" fg:w="1"/><text x="91.1169%" y="382.50"></text></g><g><title>_get_combined_index (pandas/core/indexes/api.py:158) (6 samples, 0.93%)</title><rect x="90.2477%" y="308" width="0.9288%" height="15" fill="rgb(210,75,36)" fg:x="583" fg:w="6"/><text x="90.4977%" y="318.50"></text></g><g><title>union_indexes (pandas/core/indexes/api.py:319) (2 samples, 0.31%)</title><rect x="90.8669%" y="324" width="0.3096%" height="15" fill="rgb(229,88,21)" fg:x="587" fg:w="2"/><text x="91.1169%" y="334.50"></text></g><g><title>get_unanimous_names (pandas/core/indexes/base.py:7451) (1 samples, 0.15%)</title><rect x="91.0217%" y="340" width="0.1548%" height="15" fill="rgb(252,204,47)" fg:x="588" fg:w="1"/><text x="91.2717%" y="350.50"></text></g><g><title>&lt;listcomp&gt; (pandas/core/indexes/base.py:7451) (1 samples, 0.15%)</title><rect x="91.0217%" y="356" width="0.1548%" height="15" fill="rgb(208,77,27)" fg:x="588" fg:w="1"/><text x="91.2717%" y="366.50"></text></g><g><title>_get_comb_axis (pandas/core/reshape/concat.py:640) (9 samples, 1.39%)</title><rect x="89.9381%" y="276" width="1.3932%" height="15" fill="rgb(221,76,26)" fg:x="581" fg:w="9"/><text x="90.1881%" y="286.50"></text></g><g><title>get_objs_combined_axis (pandas/core/indexes/api.py:105) (8 samples, 1.24%)</title><rect x="90.0929%" y="292" width="1.2384%" height="15" fill="rgb(225,139,18)" fg:x="582" fg:w="8"/><text x="90.3429%" y="302.50"></text></g><g><title>_get_combined_index (pandas/core/indexes/api.py:165) (1 samples, 0.15%)</title><rect x="91.1765%" y="308" width="0.1548%" height="15" fill="rgb(230,137,11)" fg:x="589" fg:w="1"/><text x="91.4265%" y="318.50"></text></g><g><title>copy (pandas/core/indexes/base.py:1314) (1 samples, 0.15%)</title><rect x="91.1765%" y="324" width="0.1548%" height="15" fill="rgb(212,28,1)" fg:x="589" fg:w="1"/><text x="91.4265%" y="334.50"></text></g><g><title>_validate_names (pandas/core/indexes/base.py:1752) (1 samples, 0.15%)</title><rect x="91.1765%" y="340" width="0.1548%" height="15" fill="rgb(248,164,17)" fg:x="589" fg:w="1"/><text x="91.4265%" y="350.50"></text></g><g><title>_get_concat_axis (pandas/core/reshape/concat.py:648) (1 samples, 0.15%)</title><rect x="91.3313%" y="276" width="0.1548%" height="15" fill="rgb(222,171,42)" fg:x="590" fg:w="1"/><text x="91.5813%" y="286.50"></text></g><g><title>_get_new_axes (pandas/core/reshape/concat.py:633) (12 samples, 1.86%)</title><rect x="89.9381%" y="244" width="1.8576%" height="15" fill="rgb(243,84,45)" fg:x="581" fg:w="12"/><text x="90.1881%" y="254.50">_..</text></g><g><title>&lt;listcomp&gt; (pandas/core/reshape/concat.py:634) (12 samples, 1.86%)</title><rect x="89.9381%" y="260" width="1.8576%" height="15" fill="rgb(252,49,23)" fg:x="581" fg:w="12"/><text x="90.1881%" y="270.50">&lt;..</text></g><g><title>_get_concat_axis (pandas/core/reshape/concat.py:685) (2 samples, 0.31%)</title><rect x="91.4861%" y="276" width="0.3096%" height="15" fill="rgb(215,19,7)" fg:x="591" fg:w="2"/><text x="91.7361%" y="286.50"></text></g><g><title>&lt;genexpr&gt; (pandas/core/reshape/concat.py:685) (1 samples, 0.15%)</title><rect x="91.6409%" y="292" width="0.1548%" height="15" fill="rgb(238,81,41)" fg:x="592" fg:w="1"/><text x="91.8909%" y="302.50"></text></g><g><title>is_thread_alive (_pydev_bundle/pydev_is_thread_alive.py:10) (1 samples, 0.15%)</title><rect x="91.6409%" y="308" width="0.1548%" height="15" fill="rgb(210,199,37)" fg:x="592" fg:w="1"/><text x="91.8909%" y="318.50"></text></g><g><title>concat (pandas/core/reshape/concat.py:368) (18 samples, 2.79%)</title><rect x="89.1641%" y="212" width="2.7864%" height="15" fill="rgb(244,192,49)" fg:x="576" fg:w="18"/><text x="89.4141%" y="222.50">co..</text></g><g><title>__init__ (pandas/core/reshape/concat.py:563) (14 samples, 2.17%)</title><rect x="89.7833%" y="228" width="2.1672%" height="15" fill="rgb(226,211,11)" fg:x="580" fg:w="14"/><text x="90.0333%" y="238.50">_..</text></g><g><title>_get_new_axes (pandas/core/reshape/concat.py:635) (1 samples, 0.15%)</title><rect x="91.7957%" y="244" width="0.1548%" height="15" fill="rgb(236,162,54)" fg:x="593" fg:w="1"/><text x="92.0457%" y="254.50"></text></g><g><title>equals (pandas/core/indexes/base.py:5464) (1 samples, 0.15%)</title><rect x="91.9505%" y="244" width="0.1548%" height="15" fill="rgb(220,229,9)" fg:x="594" fg:w="1"/><text x="92.2005%" y="254.50"></text></g><g><title>get_result (pandas/core/reshape/concat.py:611) (2 samples, 0.31%)</title><rect x="91.9505%" y="228" width="0.3096%" height="15" fill="rgb(250,87,22)" fg:x="594" fg:w="2"/><text x="92.2005%" y="238.50"></text></g><g><title>equals (pandas/core/indexes/base.py:5549) (1 samples, 0.15%)</title><rect x="92.1053%" y="244" width="0.1548%" height="15" fill="rgb(239,43,17)" fg:x="595" fg:w="1"/><text x="92.3553%" y="254.50"></text></g><g><title>array_equivalent (pandas/core/dtypes/missing.py:527) (1 samples, 0.15%)</title><rect x="92.1053%" y="260" width="0.1548%" height="15" fill="rgb(231,177,25)" fg:x="595" fg:w="1"/><text x="92.3553%" y="270.50"></text></g><g><title>_array_equivalent_object (pandas/core/dtypes/missing.py:575) (1 samples, 0.15%)</title><rect x="92.1053%" y="276" width="0.1548%" height="15" fill="rgb(219,179,1)" fg:x="595" fg:w="1"/><text x="92.3553%" y="286.50"></text></g><g><title>concatenate_managers (pandas/core/internals/concat.py:194) (1 samples, 0.15%)</title><rect x="92.4149%" y="244" width="0.1548%" height="15" fill="rgb(238,219,53)" fg:x="597" fg:w="1"/><text x="92.6649%" y="254.50"></text></g><g><title>_get_mgr_concatenation_plan (pandas/core/internals/concat.py:305) (3 samples, 0.46%)</title><rect x="92.7245%" y="276" width="0.4644%" height="15" fill="rgb(232,167,36)" fg:x="599" fg:w="3"/><text x="92.9745%" y="286.50"></text></g><g><title>blknos (pandas/core/internals/managers.py:184) (3 samples, 0.46%)</title><rect x="92.7245%" y="292" width="0.4644%" height="15" fill="rgb(244,19,51)" fg:x="599" fg:w="3"/><text x="92.9745%" y="302.50"></text></g><g><title>shape (pandas/core/internals/base.py:54) (1 samples, 0.15%)</title><rect x="93.0341%" y="308" width="0.1548%" height="15" fill="rgb(224,6,22)" fg:x="601" fg:w="1"/><text x="93.2841%" y="318.50"></text></g><g><title>_get_mgr_concatenation_plan (pandas/core/internals/concat.py:309) (2 samples, 0.31%)</title><rect x="93.1889%" y="276" width="0.3096%" height="15" fill="rgb(224,145,5)" fg:x="602" fg:w="2"/><text x="93.4389%" y="286.50"></text></g><g><title>_get_mgr_concatenation_plan (pandas/core/internals/concat.py:318) (1 samples, 0.15%)</title><rect x="93.4985%" y="276" width="0.1548%" height="15" fill="rgb(234,130,49)" fg:x="604" fg:w="1"/><text x="93.7485%" y="286.50"></text></g><g><title>_get_mgr_concatenation_plan (pandas/core/internals/concat.py:331) (1 samples, 0.15%)</title><rect x="93.6533%" y="276" width="0.1548%" height="15" fill="rgb(254,6,2)" fg:x="605" fg:w="1"/><text x="93.9033%" y="286.50"></text></g><g><title>mgr_locs (pandas/core/internals/blocks.py:213) (1 samples, 0.15%)</title><rect x="93.6533%" y="292" width="0.1548%" height="15" fill="rgb(208,96,46)" fg:x="605" fg:w="1"/><text x="93.9033%" y="302.50"></text></g><g><title>concatenate_managers (pandas/core/internals/concat.py:199) (9 samples, 1.39%)</title><rect x="92.5697%" y="244" width="1.3932%" height="15" fill="rgb(239,3,39)" fg:x="598" fg:w="9"/><text x="92.8197%" y="254.50"></text></g><g><title>&lt;listcomp&gt; (pandas/core/internals/concat.py:200) (8 samples, 1.24%)</title><rect x="92.7245%" y="260" width="1.2384%" height="15" fill="rgb(233,210,1)" fg:x="599" fg:w="8"/><text x="92.9745%" y="270.50"></text></g><g><title>_get_mgr_concatenation_plan (pandas/core/internals/concat.py:348) (1 samples, 0.15%)</title><rect x="93.8080%" y="276" width="0.1548%" height="15" fill="rgb(244,137,37)" fg:x="606" fg:w="1"/><text x="94.0580%" y="286.50"></text></g><g><title>_combine_concat_plans (pandas/core/internals/concat.py:737) (1 samples, 0.15%)</title><rect x="93.9628%" y="260" width="0.1548%" height="15" fill="rgb(240,136,2)" fg:x="607" fg:w="1"/><text x="94.2128%" y="270.50"></text></g><g><title>_combine_concat_plans (pandas/core/internals/concat.py:750) (2 samples, 0.31%)</title><rect x="94.1176%" y="260" width="0.3096%" height="15" fill="rgb(239,18,37)" fg:x="608" fg:w="2"/><text x="94.3676%" y="270.50"></text></g><g><title>concatenate_managers (pandas/core/internals/concat.py:205) (4 samples, 0.62%)</title><rect x="93.9628%" y="244" width="0.6192%" height="15" fill="rgb(218,185,22)" fg:x="607" fg:w="4"/><text x="94.2128%" y="254.50"></text></g><g><title>_combine_concat_plans (pandas/core/internals/concat.py:751) (1 samples, 0.15%)</title><rect x="94.4272%" y="260" width="0.1548%" height="15" fill="rgb(225,218,4)" fg:x="610" fg:w="1"/><text x="94.6772%" y="270.50"></text></g><g><title>_next_or_none (pandas/core/internals/concat.py:731) (1 samples, 0.15%)</title><rect x="94.4272%" y="276" width="0.1548%" height="15" fill="rgb(230,182,32)" fg:x="610" fg:w="1"/><text x="94.6772%" y="286.50"></text></g><g><title>_is_uniform_join_units (pandas/core/internals/concat.py:647) (1 samples, 0.15%)</title><rect x="94.5820%" y="260" width="0.1548%" height="15" fill="rgb(242,56,43)" fg:x="611" fg:w="1"/><text x="94.8320%" y="270.50"></text></g><g><title>&lt;genexpr&gt; (pandas/core/internals/concat.py:647) (1 samples, 0.15%)</title><rect x="94.5820%" y="276" width="0.1548%" height="15" fill="rgb(233,99,24)" fg:x="611" fg:w="1"/><text x="94.8320%" y="286.50"></text></g><g><title>&lt;genexpr&gt; (pandas/core/internals/concat.py:651) (1 samples, 0.15%)</title><rect x="94.7368%" y="276" width="0.1548%" height="15" fill="rgb(234,209,42)" fg:x="612" fg:w="1"/><text x="94.9868%" y="286.50"></text></g><g><title>is_dtype_equal (pandas/core/dtypes/common.py:627) (1 samples, 0.15%)</title><rect x="94.7368%" y="292" width="0.1548%" height="15" fill="rgb(227,7,12)" fg:x="612" fg:w="1"/><text x="94.9868%" y="302.50"></text></g><g><title>get_dtype (pandas/core/dtypes/common.py:1580) (1 samples, 0.15%)</title><rect x="94.7368%" y="308" width="0.1548%" height="15" fill="rgb(245,203,43)" fg:x="612" fg:w="1"/><text x="94.9868%" y="318.50"></text></g><g><title>_is_uniform_join_units (pandas/core/internals/concat.py:650) (2 samples, 0.31%)</title><rect x="94.7368%" y="260" width="0.3096%" height="15" fill="rgb(238,205,33)" fg:x="612" fg:w="2"/><text x="94.9868%" y="270.50"></text></g><g><title>&lt;genexpr&gt; (pandas/core/internals/concat.py:655) (1 samples, 0.15%)</title><rect x="94.8916%" y="276" width="0.1548%" height="15" fill="rgb(231,56,7)" fg:x="613" fg:w="1"/><text x="95.1416%" y="286.50"></text></g><g><title>is_na (pandas/core/internals/concat.py:415) (1 samples, 0.15%)</title><rect x="95.5108%" y="292" width="0.1548%" height="15" fill="rgb(244,186,29)" fg:x="617" fg:w="1"/><text x="95.7608%" y="302.50"></text></g><g><title>_can_hold_na (pandas/core/internals/blocks.py:171) (1 samples, 0.15%)</title><rect x="95.6656%" y="308" width="0.1548%" height="15" fill="rgb(234,111,31)" fg:x="618" fg:w="1"/><text x="95.9156%" y="318.50"></text></g><g><title>is_na (pandas/core/internals/concat.py:421) (2 samples, 0.31%)</title><rect x="95.6656%" y="292" width="0.3096%" height="15" fill="rgb(241,149,10)" fg:x="618" fg:w="2"/><text x="95.9156%" y="302.50"></text></g><g><title>_can_hold_na (pandas/core/internals/blocks.py:173) (1 samples, 0.15%)</title><rect x="95.8204%" y="308" width="0.1548%" height="15" fill="rgb(249,206,44)" fg:x="619" fg:w="1"/><text x="96.0704%" y="318.50"></text></g><g><title>is_na (pandas/core/internals/concat.py:438) (1 samples, 0.15%)</title><rect x="95.9752%" y="292" width="0.1548%" height="15" fill="rgb(251,153,30)" fg:x="620" fg:w="1"/><text x="96.2252%" y="302.50"></text></g><g><title>concatenate_managers (pandas/core/internals/concat.py:216) (12 samples, 1.86%)</title><rect x="94.5820%" y="244" width="1.8576%" height="15" fill="rgb(239,152,38)" fg:x="611" fg:w="12"/><text x="94.8320%" y="254.50">c..</text></g><g><title>_is_uniform_join_units (pandas/core/internals/concat.py:660) (9 samples, 1.39%)</title><rect x="95.0464%" y="260" width="1.3932%" height="15" fill="rgb(249,139,47)" fg:x="614" fg:w="9"/><text x="95.2964%" y="270.50"></text></g><g><title>&lt;genexpr&gt; (pandas/core/internals/concat.py:660) (9 samples, 1.39%)</title><rect x="95.0464%" y="276" width="1.3932%" height="15" fill="rgb(244,64,35)" fg:x="614" fg:w="9"/><text x="95.2964%" y="286.50"></text></g><g><title>is_na (pandas/core/internals/concat.py:439) (2 samples, 0.31%)</title><rect x="96.1300%" y="292" width="0.3096%" height="15" fill="rgb(216,46,15)" fg:x="621" fg:w="2"/><text x="96.3800%" y="302.50"></text></g><g><title>isna (pandas/core/dtypes/missing.py:185) (2 samples, 0.31%)</title><rect x="96.1300%" y="308" width="0.3096%" height="15" fill="rgb(250,74,19)" fg:x="621" fg:w="2"/><text x="96.3800%" y="318.50"></text></g><g><title>_isna (pandas/core/dtypes/missing.py:191) (1 samples, 0.15%)</title><rect x="96.2848%" y="324" width="0.1548%" height="15" fill="rgb(249,42,33)" fg:x="622" fg:w="1"/><text x="96.5348%" y="334.50"></text></g><g><title>get_result (pandas/core/reshape/concat.py:616) (36 samples, 5.57%)</title><rect x="92.2601%" y="228" width="5.5728%" height="15" fill="rgb(242,149,17)" fg:x="596" fg:w="36"/><text x="92.5101%" y="238.50">get_res..</text></g><g><title>concatenate_managers (pandas/core/internals/concat.py:223) (9 samples, 1.39%)</title><rect x="96.4396%" y="244" width="1.3932%" height="15" fill="rgb(244,29,21)" fg:x="623" fg:w="9"/><text x="96.6896%" y="254.50"></text></g><g><title>step (src/trader.py:483) (234 samples, 36.22%)</title><rect x="61.7647%" y="164" width="36.2229%" height="15" fill="rgb(220,130,37)" fg:x="399" fg:w="234"/><text x="62.0147%" y="174.50">step (src/trader.py:483)</text></g><g><title>render (src/trader.py:548) (59 samples, 9.13%)</title><rect x="88.8545%" y="180" width="9.1331%" height="15" fill="rgb(211,67,2)" fg:x="574" fg:w="59"/><text x="89.1045%" y="190.50">render (src/t..</text></g><g><title>wrapper (pandas/util/_decorators.py:331) (58 samples, 8.98%)</title><rect x="89.0093%" y="196" width="8.9783%" height="15" fill="rgb(235,68,52)" fg:x="575" fg:w="58"/><text x="89.2593%" y="206.50">wrapper (pand..</text></g><g><title>concat (pandas/core/reshape/concat.py:381) (39 samples, 6.04%)</title><rect x="91.9505%" y="212" width="6.0372%" height="15" fill="rgb(246,142,3)" fg:x="594" fg:w="39"/><text x="92.2005%" y="222.50">concat (..</text></g><g><title>get_result (pandas/core/reshape/concat.py:617) (1 samples, 0.15%)</title><rect x="97.8328%" y="228" width="0.1548%" height="15" fill="rgb(241,25,7)" fg:x="632" fg:w="1"/><text x="98.0828%" y="238.50"></text></g><g><title>step (src/trader.py:486) (1 samples, 0.15%)</title><rect x="97.9876%" y="164" width="0.1548%" height="15" fill="rgb(242,119,39)" fg:x="633" fg:w="1"/><text x="98.2376%" y="174.50"></text></g><g><title>_worker (src/sanic_vec_env.py:66) (497 samples, 76.93%)</title><rect x="21.3622%" y="148" width="76.9350%" height="15" fill="rgb(241,98,45)" fg:x="138" fg:w="497"/><text x="21.6122%" y="158.50">_worker (src/sanic_vec_env.py:66)</text></g><g><title>step (src/trader.py:490) (1 samples, 0.15%)</title><rect x="98.1424%" y="164" width="0.1548%" height="15" fill="rgb(254,28,30)" fg:x="634" fg:w="1"/><text x="98.3924%" y="174.50"></text></g><g><title>reset (src/trader.py:306) (1 samples, 0.15%)</title><rect x="98.1424%" y="180" width="0.1548%" height="15" fill="rgb(241,142,54)" fg:x="634" fg:w="1"/><text x="98.3924%" y="190.50"></text></g><g><title>_get_state_frame (src/trader.py:335) (1 samples, 0.15%)</title><rect x="98.1424%" y="196" width="0.1548%" height="15" fill="rgb(222,85,15)" fg:x="634" fg:w="1"/><text x="98.3924%" y="206.50"></text></g><g><title>select (polars/lazyframe/frame.py:3094) (1 samples, 0.15%)</title><rect x="98.1424%" y="212" width="0.1548%" height="15" fill="rgb(210,85,47)" fg:x="634" fg:w="1"/><text x="98.3924%" y="222.50"></text></g><g><title>parse_as_list_of_expressions (polars/utils/_parse_expr_input.py:42) (1 samples, 0.15%)</title><rect x="98.1424%" y="228" width="0.1548%" height="15" fill="rgb(224,206,25)" fg:x="634" fg:w="1"/><text x="98.3924%" y="238.50"></text></g><g><title>_parse_positional_inputs (polars/utils/_parse_expr_input.py:56) (1 samples, 0.15%)</title><rect x="98.1424%" y="244" width="0.1548%" height="15" fill="rgb(243,201,19)" fg:x="634" fg:w="1"/><text x="98.3924%" y="254.50"></text></g><g><title>&lt;listcomp&gt; (polars/utils/_parse_expr_input.py:56) (1 samples, 0.15%)</title><rect x="98.1424%" y="260" width="0.1548%" height="15" fill="rgb(236,59,4)" fg:x="634" fg:w="1"/><text x="98.3924%" y="270.50"></text></g><g><title>parse_as_expression (polars/utils/_parse_expr_input.py:119) (1 samples, 0.15%)</title><rect x="98.1424%" y="276" width="0.1548%" height="15" fill="rgb(254,179,45)" fg:x="634" fg:w="1"/><text x="98.3924%" y="286.50"></text></g><g><title>__new__ (polars/functions/col.py:288) (1 samples, 0.15%)</title><rect x="98.1424%" y="292" width="0.1548%" height="15" fill="rgb(226,14,10)" fg:x="634" fg:w="1"/><text x="98.3924%" y="302.50"></text></g><g><title>_create_col (polars/functions/col.py:42) (1 samples, 0.15%)</title><rect x="98.1424%" y="308" width="0.1548%" height="15" fill="rgb(244,27,41)" fg:x="634" fg:w="1"/><text x="98.3924%" y="318.50"></text></g><g><title>wrap_expr (polars/utils/_wrap.py:25) (1 samples, 0.15%)</title><rect x="98.1424%" y="324" width="0.1548%" height="15" fill="rgb(235,35,32)" fg:x="634" fg:w="1"/><text x="98.3924%" y="334.50"></text></g><g><title>_from_pyexpr (polars/expr/expr.py:126) (1 samples, 0.15%)</title><rect x="98.1424%" y="340" width="0.1548%" height="15" fill="rgb(218,68,31)" fg:x="634" fg:w="1"/><text x="98.3924%" y="350.50"></text></g><g><title>_worker (src/sanic_vec_env.py:73) (1 samples, 0.15%)</title><rect x="98.2972%" y="148" width="0.1548%" height="15" fill="rgb(207,120,37)" fg:x="635" fg:w="1"/><text x="98.5472%" y="158.50"></text></g><g><title>reset (src/trader.py:306) (1 samples, 0.15%)</title><rect x="98.2972%" y="164" width="0.1548%" height="15" fill="rgb(227,98,0)" fg:x="635" fg:w="1"/><text x="98.5472%" y="174.50"></text></g><g><title>_get_state_frame (src/trader.py:335) (1 samples, 0.15%)</title><rect x="98.2972%" y="180" width="0.1548%" height="15" fill="rgb(207,7,3)" fg:x="635" fg:w="1"/><text x="98.5472%" y="190.50"></text></g><g><title>collect (polars/lazyframe/frame.py:1940) (1 samples, 0.15%)</title><rect x="98.2972%" y="196" width="0.1548%" height="15" fill="rgb(206,98,19)" fg:x="635" fg:w="1"/><text x="98.5472%" y="206.50"></text></g><g><title>_send_bytes (multiprocessing/connection.py:416) (1 samples, 0.15%)</title><rect x="98.6068%" y="180" width="0.1548%" height="15" fill="rgb(217,5,26)" fg:x="637" fg:w="1"/><text x="98.8568%" y="190.50"></text></g><g><title>_send_bytes (multiprocessing/connection.py:420) (2 samples, 0.31%)</title><rect x="98.7616%" y="180" width="0.3096%" height="15" fill="rgb(235,190,38)" fg:x="638" fg:w="2"/><text x="99.0116%" y="190.50"></text></g><g><title>_send (multiprocessing/connection.py:384) (1 samples, 0.15%)</title><rect x="98.9164%" y="196" width="0.1548%" height="15" fill="rgb(247,86,24)" fg:x="639" fg:w="1"/><text x="99.1664%" y="206.50"></text></g><g><title>_send_bytes (multiprocessing/connection.py:421) (1 samples, 0.15%)</title><rect x="99.0712%" y="180" width="0.1548%" height="15" fill="rgb(205,101,16)" fg:x="640" fg:w="1"/><text x="99.3212%" y="190.50"></text></g><g><title>_send (multiprocessing/connection.py:384) (1 samples, 0.15%)</title><rect x="99.0712%" y="196" width="0.1548%" height="15" fill="rgb(246,168,33)" fg:x="640" fg:w="1"/><text x="99.3212%" y="206.50"></text></g><g><title>dumps (multiprocessing/reduction.py:51) (4 samples, 0.62%)</title><rect x="99.2260%" y="180" width="0.6192%" height="15" fill="rgb(231,114,1)" fg:x="641" fg:w="4"/><text x="99.4760%" y="190.50"></text></g><g><title>__init__ (multiprocessing/reduction.py:41) (1 samples, 0.15%)</title><rect x="99.6904%" y="196" width="0.1548%" height="15" fill="rgb(207,184,53)" fg:x="644" fg:w="1"/><text x="99.9404%" y="206.50"></text></g><g><title>all (646 samples, 100%)</title><rect x="0.0000%" y="52" width="100.0000%" height="15" fill="rgb(224,95,51)" fg:x="0" fg:w="646"/><text x="0.2500%" y="62.50"></text></g><g><title>&lt;module&gt; (&lt;string&gt;:1) (646 samples, 100.00%)</title><rect x="0.0000%" y="68" width="100.0000%" height="15" fill="rgb(212,188,45)" fg:x="0" fg:w="646"/><text x="0.2500%" y="78.50">&lt;module&gt; (&lt;string&gt;:1)</text></g><g><title>spawn_main (multiprocessing/spawn.py:122) (646 samples, 100.00%)</title><rect x="0.0000%" y="84" width="100.0000%" height="15" fill="rgb(223,154,38)" fg:x="0" fg:w="646"/><text x="0.2500%" y="94.50">spawn_main (multiprocessing/spawn.py:122)</text></g><g><title>_main (multiprocessing/spawn.py:135) (646 samples, 100.00%)</title><rect x="0.0000%" y="100" width="100.0000%" height="15" fill="rgb(251,22,52)" fg:x="0" fg:w="646"/><text x="0.2500%" y="110.50">_main (multiprocessing/spawn.py:135)</text></g><g><title>_bootstrap (multiprocessing/process.py:314) (646 samples, 100.00%)</title><rect x="0.0000%" y="116" width="100.0000%" height="15" fill="rgb(229,209,22)" fg:x="0" fg:w="646"/><text x="0.2500%" y="126.50">_bootstrap (multiprocessing/process.py:314)</text></g><g><title>run (multiprocessing/process.py:108) (646 samples, 100.00%)</title><rect x="0.0000%" y="132" width="100.0000%" height="15" fill="rgb(234,138,34)" fg:x="0" fg:w="646"/><text x="0.2500%" y="142.50">run (multiprocessing/process.py:108)</text></g><g><title>_worker (src/sanic_vec_env.py:74) (10 samples, 1.55%)</title><rect x="98.4520%" y="148" width="1.5480%" height="15" fill="rgb(212,95,11)" fg:x="636" fg:w="10"/><text x="98.7020%" y="158.50"></text></g><g><title>send (multiprocessing/connection.py:206) (10 samples, 1.55%)</title><rect x="98.4520%" y="164" width="1.5480%" height="15" fill="rgb(240,179,47)" fg:x="636" fg:w="10"/><text x="98.7020%" y="174.50"></text></g><g><title>dumps (multiprocessing/reduction.py:52) (1 samples, 0.15%)</title><rect x="99.8452%" y="180" width="0.1548%" height="15" fill="rgb(240,163,11)" fg:x="645" fg:w="1"/><text x="100.0952%" y="190.50"></text></g></svg></svg>